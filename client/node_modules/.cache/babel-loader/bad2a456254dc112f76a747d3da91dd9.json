{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abtin\\\\Desktop\\\\HTML\\\\dia\\\\client\\\\src\\\\components\\\\pages\\\\ProduktePage.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport Navbar_produkte from \"../single_comps/produktePageComps/Navbar_produkte\";\nimport SearchBar from \"../single_comps/produktePageComps/SearchBar\";\nimport SetProducts from \"../single_comps/produktePageComps/SetProducts\";\nimport Products from \"../single_comps/produktePageComps/Products\";\nimport MidCards from \"../single_comps/produktePageComps/MidCards\";\nimport { useRef, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopDiv = styled.div`\n  width: 100%;\n  height: 800px;\n  overflow: hidden;\n`;\n_c = TopDiv;\nconst MidDiv1 = styled.div`\n  width: 100%;\n  margin-top: 10px;\n`;\n_c2 = MidDiv1;\nconst MidDiv2 = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 1600px;\n  height: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 550px;\n\n  border: 1px solid black;\n`;\n_c3 = MidDiv2;\nconst FootDiv = styled.div`\n  margin-top: 140px;\n  width: 100%;\n  height: 300px;\n`;\n_c4 = FootDiv;\n\nfunction ProduktePage(_ref) {\n  _s();\n\n  let {\n    allprods_display,\n    deactProd\n  } = _ref;\n  var allprods;\n  allpr;\n  const [searchChar, setSearchTextChar] = useState(\"\");\n  const filterDeleteList = useRef();\n  const searcher = useRef(false);\n  const find = useRef(true);\n  var [filter, setFilter] = useState([filterKategorie(allprods.flat()), filterMarke(allprods.flat()), filterMaterial(allprods.flat()), filterFarbe(allprods.flat())]);\n  var new_prods = useRef([]);\n  var past_prods = allprods_display;\n  past_prods = past_prods.flat();\n  const filterSetts = useRef([]);\n  const filterlist = useRef([[filter, 999, \"X\"]]);\n  const prodlist = useRef([allprods.flat()]); ////////////////////////////////////////////////////////////////\n\n  function searchText(text) {\n    setSearchTextChar(text);\n\n    if (text) {\n      searcher.current = true;\n    } else {\n      searcher.current = false;\n      allprods = allprods_display;\n    }\n  }\n  /*if (searcher.current) {\r\n    var prods = [];\r\n    new_prods.current = [];\r\n    for (var i = 0; i < past_prods.length; i++) {\r\n      var obj_text = past_prods[i].product_keywords.toString();\r\n      obj_text = obj_text.toLowerCase();\r\n      var text_ = searchChar.toString();\r\n      text_ = text_.toLowerCase();\r\n      if (obj_text.search(text_) != -1) {\r\n        new_prods.current.push(past_prods[i]);\r\n      }\r\n    }\r\n      var size = 25;\r\n    for (var i = 0; i < new_prods.current.length; i += size) {\r\n      prods.push(new_prods.current.slice(i, i + size));\r\n    }\r\n    if (prods.length > 0) {\r\n      allprods = prods;\r\n      find.current = true;\r\n    } else {\r\n      allprods = allprods_display;\r\n      find.current = false;\r\n      console.log(\"error nothing found\");\r\n    }\r\n  }\r\n  ////////////////////////////////////////////////////////////////\r\n  useEffect(() => {\r\n    var neuProds = [\r\n      filterKategorie(allprods.flat()),\r\n      filterMarke(allprods.flat()),\r\n      filterMaterial(allprods.flat()),\r\n      filterFarbe(allprods.flat()),\r\n    ];\r\n    var outputArr = filter;\r\n    var check = false;\r\n    for (let i = 0; i < outputArr.length; i++) {\r\n      for (let j = 0; j < outputArr[i].length; j++) {\r\n        check = false;\r\n        for (let k = 0; k < neuProds[i].length; k++) {\r\n          if (outputArr[i][j][0] == neuProds[i][k][0]) {\r\n            outputArr[i][j][1] = neuProds[i][k][1];\r\n            check = true;\r\n          }\r\n        }\r\n        if (check == false) {\r\n          outputArr[i][j][1] = [];\r\n        }\r\n      }\r\n    }\r\n    setFilter([...outputArr]);\r\n  }, [searchChar]);*/\n  ////////////////////////////////////////////////////////////////\n\n\n  const newFilter = (filter, n, m, setter, prods) => {\n    //setFilter([...filter]);\n    filterSetts.current = [n, m, setter, prods];\n\n    if (filterSetts.current[2]) {\n      let newFilt = addFilter(filterSetts.current);\n      filterDeleteList.current = [];\n      newFilt[0][0].map((item, index) => {\n        if (index > 0) {\n          filterDeleteList.current.push(item);\n        }\n      });\n      let size = 25;\n      let newProds = [];\n\n      for (var i = 0; i < newFilt[1][0][newFilt[1][1] - 1].length; i += size) {\n        newProds.push(newFilt[1][0][newFilt[1][1] - 1].slice(i, i + size));\n      }\n\n      allprods = [...newProds];\n      setFilter([...newFilt[0][0][newFilt[0][1] - 1][0]]);\n    } else {\n      let newFilt = deleteFilter(filterSetts.current);\n      filterDeleteList.current = [];\n      newFilt[0][0].map((item, index) => {\n        if (index > 0) {\n          filterDeleteList.current.push(item);\n        }\n      });\n      let size = 25;\n      let newProds = [];\n\n      for (var i = 0; i < newFilt[1][0][newFilt[1][1] - 1].length; i += size) {\n        newProds.push(newFilt[1][0][newFilt[1][1] - 1].slice(i, i + size));\n      }\n\n      allprods = [...newProds];\n      setFilter([...newFilt[0][0][newFilt[0][1] - 1][0]]);\n    }\n  };\n\n  const addFilter = filtersetts => {\n    let length1 = filterlist.current.length;\n    let length2 = prodlist.current.length;\n    let allprds = []; //console.log(filterlist.current[length1 - 1][1]);\n    //console.log(filtersetts[0]);\n\n    if (filtersetts[0] == filterlist.current[length1 - 1][1]) {\n      allprds = filtersetts[3].concat(prodlist.current[length2 - 1]);\n    } else {\n      allprds = filtersetts[3];\n    }\n\n    prodlist.current.push(allprds);\n    filterlist.current.push([except(filtersetts[0], prodlist.current[length2], filterlist.current[length1 - 1][0]), filtersetts[0], filtersetts[1]]); //console.log(filterlist.current);\n    //console.log(prodlist.current);\n\n    let endarr = [[filterlist.current, filterlist.current.length], [prodlist.current, prodlist.current.length]];\n    return endarr;\n  };\n\n  const deleteFilter = filtersetts => {\n    let length1 = filterlist.current.length;\n    let length2 = prodlist.current.length;\n    let allprds = [];\n    let ind;\n\n    for (let i = 0; i < length1; i++) {\n      if (filterlist.current[i][2] == filtersetts[1]) {\n        ind = i;\n      }\n    }\n\n    filterlist.current.splice(ind, 1);\n    prodlist.current.splice(ind, 1);\n\n    for (let i = 1; i < filterlist.current.length; i++) {\n      allprds = [];\n      let currentProd = [filterlist.current[i][1], filterlist.current[i][2]];\n\n      for (let j = 0; j < filterlist.current[i - 1][0][currentProd[0]].length; j++) {\n        if (filterlist.current[i - 1][0][currentProd[0]][j][0] == currentProd[1]) {\n          if (currentProd[0] == filterlist.current[i - 1][1]) {\n            allprds = prodlist.current[i - 1].concat(filterlist.current[i - 1][0][currentProd[0]][j][1]);\n          } else {\n            allprds = filterlist.current[i - 1][0][currentProd[0]][j][1];\n          }\n        }\n      }\n\n      prodlist.current[i] = allprds;\n      filterlist.current[i][0] = except(filterlist.current[i][1], prodlist.current[i], filterlist.current[i - 1][0]);\n    } //console.log(filterlist.current);\n    //console.log(prodlist.current);\n\n\n    let endarr = [[filterlist.current, filterlist.current.length], [prodlist.current, prodlist.current.length]];\n    return endarr;\n  };\n\n  console.log(allprods);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflowY: \"hidden\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TopDiv, {\n      children: /*#__PURE__*/_jsxDEV(Navbar_produkte, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MidDiv1, {\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        searchOn: searchText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SetProducts, {\n        deactProd: deactProd,\n        filter: filter,\n        setFilter: newFilter,\n        deleteList: filterDeleteList.current\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), searcher.current ? find.current ? /*#__PURE__*/_jsxDEV(Products, {\n        allprods_display: allprods,\n        filter: filter,\n        filterSetts: filterSetts.current\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"nothing found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Products, {\n        allprods_display: allprods,\n        filter: filter,\n        filterSetts: filterSetts.current\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MidDiv2, {\n      children: /*#__PURE__*/_jsxDEV(MidCards, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FootDiv, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n} //<Products allprods_display={allprods} filter={filterMaker(allprods)} />\n\n\n_s(ProduktePage, \"K9FsOsmP0BSvuLRWLcnvanFVcjs=\");\n\n_c5 = ProduktePage;\nexport default ProduktePage; ////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n\nconst except = (out, prods, lastprods) => {\n  let neuProds = [];\n\n  switch (out) {\n    case 0:\n      neuProds = [lastprods[0], filterMarke(prods), filterMaterial(prods), filterFarbe(prods)];\n      break;\n\n    case 1:\n      neuProds = [filterKategorie(prods), lastprods[1], filterMaterial(prods), filterFarbe(prods)];\n      break;\n\n    case 2:\n      neuProds = [filterKategorie(prods), filterMarke(prods), lastprods[2], filterFarbe(prods)];\n      break;\n\n    case 3:\n      neuProds = [filterKategorie(prods), filterMarke(prods), filterMaterial(prods), lastprods[3]];\n      break;\n  }\n\n  let prod = [...lastprods];\n  let endprods = [...neuProds];\n  let check = false;\n\n  for (let i = 0; i < prod.length; i++) {\n    for (let j = 0; j < prod[i].length; j++) {\n      check = false;\n\n      for (let k = 0; k < neuProds[i].length; k++) {\n        if (prod[i][j][0] == neuProds[i][k][0]) {\n          check = true;\n        }\n      }\n\n      if (check !== true) {\n        let a = [...prod[i][j]];\n        a[1] = [];\n        endprods[i].push(a);\n      }\n    }\n  } //console.log(neuProds);\n  //console.log(endprods);\n\n\n  return endprods;\n}; ////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n\n\nconst filterKategorie = prods => {\n  let filter = [];\n  let uniq = [];\n  let endArr = [];\n  uniq = [\"Ohrring\", \"Ohrstecker\", \"Kette\", \"Ring\", \"Armband\", \"Creole\"];\n  endArr = [];\n  uniq.map((item, index) => {\n    prods.map((prct, ind) => {\n      if (prct.product_keywords != null) {\n        let prodKategorie = prct.product_keywords.toLowerCase();\n        let savedKategorie = item.toLowerCase();\n\n        if (prodKategorie.search(savedKategorie) != -1) {\n          endArr.push(prct);\n        }\n      }\n    });\n    filter.push([item, endArr, false]);\n    endArr = [];\n  });\n  return filter;\n}; ////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n\n\nconst filterMarke = prods => {\n  let filter = [];\n  let uniq = [];\n  let endArr = [];\n  let markenArr = [];\n  prods.map((prod, ind) => {\n    if (prod.product_marke != null) {\n      markenArr.push(prod.product_marke.toLowerCase());\n    }\n  });\n  uniq = [...new Set(markenArr)];\n  uniq.map((item, index) => {\n    prods.map((prct, ind) => {\n      if (prct.product_marke != null) {\n        let prodMarke = prct.product_marke.toLowerCase();\n        let savedMarke = item.toLowerCase();\n\n        if (prodMarke.search(savedMarke) != -1) {\n          endArr.push(prct);\n        }\n      }\n    });\n    filter.push([item, endArr, false]);\n    endArr = [];\n  });\n  return filter;\n}; ////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n\n\nconst filterMaterial = prods => {\n  let filter = [];\n  let uniq = [];\n  let endArr = [];\n  let materialArr = [];\n  prods.map((prod, ind) => {\n    if (prod.product_material != null) {\n      materialArr.push(prod.product_material.toLowerCase());\n    }\n  });\n  uniq = [...new Set(materialArr)];\n  uniq.map((item, index) => {\n    prods.map((prct, ind) => {\n      if (prct.product_material != null) {\n        let prodMaterial = prct.product_material.toLowerCase();\n        let savedMaterial = item.toLowerCase();\n\n        if (prodMaterial.search(savedMaterial) != -1) {\n          endArr.push(prct);\n        }\n      }\n    });\n    filter.push([item, endArr, false]);\n    endArr = [];\n  });\n  return filter;\n}; ////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n\n\nconst filterFarbe = prods => {\n  let filter = [];\n  let uniq = [];\n  let endArr = [];\n  let farbenArr = [];\n  prods.map((prod, ind) => {\n    if (prod.product_farbe != null) {\n      farbenArr.push(prod.product_farbe.toLowerCase());\n    }\n  });\n  uniq = [...new Set(farbenArr)];\n  uniq.map((item, index) => {\n    prods.map((prct, ind) => {\n      if (prct.product_farbe != null) {\n        let prodFarbe = prct.product_farbe.toLowerCase();\n        let savedFarbe = item.toLowerCase();\n\n        if (prodFarbe.search(savedFarbe) != -1) {\n          endArr.push(prct);\n        }\n      }\n    });\n    filter.push([item, endArr, false]);\n    endArr = [];\n  });\n  return filter;\n};\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"TopDiv\");\n$RefreshReg$(_c2, \"MidDiv1\");\n$RefreshReg$(_c3, \"MidDiv2\");\n$RefreshReg$(_c4, \"FootDiv\");\n$RefreshReg$(_c5, \"ProduktePage\");","map":{"version":3,"sources":["C:/Users/Abtin/Desktop/HTML/dia/client/src/components/pages/ProduktePage.js"],"names":["styled","Navbar_produkte","SearchBar","SetProducts","Products","MidCards","useRef","useState","useEffect","TopDiv","div","MidDiv1","MidDiv2","FootDiv","ProduktePage","allprods_display","deactProd","allprods","allpr","searchChar","setSearchTextChar","filterDeleteList","searcher","find","filter","setFilter","filterKategorie","flat","filterMarke","filterMaterial","filterFarbe","new_prods","past_prods","filterSetts","filterlist","prodlist","searchText","text","current","newFilter","n","m","setter","prods","newFilt","addFilter","map","item","index","push","size","newProds","i","length","slice","deleteFilter","filtersetts","length1","length2","allprds","concat","except","endarr","ind","splice","currentProd","j","console","log","overflowY","out","lastprods","neuProds","prod","endprods","check","k","a","uniq","endArr","prct","product_keywords","prodKategorie","toLowerCase","savedKategorie","search","markenArr","product_marke","Set","prodMarke","savedMarke","materialArr","product_material","prodMaterial","savedMaterial","farbenArr","product_farbe","prodFarbe","savedFarbe"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\r\nimport Navbar_produkte from \"../single_comps/produktePageComps/Navbar_produkte\";\r\nimport SearchBar from \"../single_comps/produktePageComps/SearchBar\";\r\nimport SetProducts from \"../single_comps/produktePageComps/SetProducts\";\r\nimport Products from \"../single_comps/produktePageComps/Products\";\r\nimport MidCards from \"../single_comps/produktePageComps/MidCards\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\n\r\nconst TopDiv = styled.div`\r\n  width: 100%;\r\n  height: 800px;\r\n  overflow: hidden;\r\n`;\r\nconst MidDiv1 = styled.div`\r\n  width: 100%;\r\n  margin-top: 10px;\r\n`;\r\nconst MidDiv2 = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  width: 1600px;\r\n  height: 800px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 550px;\r\n\r\n  border: 1px solid black;\r\n`;\r\nconst FootDiv = styled.div`\r\n  margin-top: 140px;\r\n  width: 100%;\r\n  height: 300px;\r\n`;\r\nfunction ProduktePage({ allprods_display, deactProd }) {\r\n  var allprods;\r\n  allpr\r\n  const [searchChar, setSearchTextChar] = useState(\"\");\r\n  const filterDeleteList = useRef();\r\n  const searcher = useRef(false);\r\n  const find = useRef(true);\r\n  var [filter, setFilter] = useState([\r\n    filterKategorie(allprods.flat()),\r\n    filterMarke(allprods.flat()),\r\n    filterMaterial(allprods.flat()),\r\n    filterFarbe(allprods.flat()),\r\n  ]);\r\n  var new_prods = useRef([]);\r\n  var past_prods = allprods_display;\r\n  past_prods = past_prods.flat();\r\n  const filterSetts = useRef([]);\r\n  const filterlist = useRef([[filter, 999, \"X\"]]);\r\n  const prodlist = useRef([allprods.flat()]);\r\n  ////////////////////////////////////////////////////////////////\r\n  function searchText(text) {\r\n    setSearchTextChar(text);\r\n    if (text) {\r\n      searcher.current = true;\r\n    } else {\r\n      searcher.current = false;\r\n      allprods = allprods_display;\r\n    }\r\n  }\r\n  /*if (searcher.current) {\r\n    var prods = [];\r\n    new_prods.current = [];\r\n    for (var i = 0; i < past_prods.length; i++) {\r\n      var obj_text = past_prods[i].product_keywords.toString();\r\n      obj_text = obj_text.toLowerCase();\r\n      var text_ = searchChar.toString();\r\n      text_ = text_.toLowerCase();\r\n      if (obj_text.search(text_) != -1) {\r\n        new_prods.current.push(past_prods[i]);\r\n      }\r\n    }\r\n\r\n    var size = 25;\r\n    for (var i = 0; i < new_prods.current.length; i += size) {\r\n      prods.push(new_prods.current.slice(i, i + size));\r\n    }\r\n    if (prods.length > 0) {\r\n      allprods = prods;\r\n      find.current = true;\r\n    } else {\r\n      allprods = allprods_display;\r\n      find.current = false;\r\n      console.log(\"error nothing found\");\r\n    }\r\n  }\r\n  ////////////////////////////////////////////////////////////////\r\n  useEffect(() => {\r\n    var neuProds = [\r\n      filterKategorie(allprods.flat()),\r\n      filterMarke(allprods.flat()),\r\n      filterMaterial(allprods.flat()),\r\n      filterFarbe(allprods.flat()),\r\n    ];\r\n    var outputArr = filter;\r\n    var check = false;\r\n    for (let i = 0; i < outputArr.length; i++) {\r\n      for (let j = 0; j < outputArr[i].length; j++) {\r\n        check = false;\r\n        for (let k = 0; k < neuProds[i].length; k++) {\r\n          if (outputArr[i][j][0] == neuProds[i][k][0]) {\r\n            outputArr[i][j][1] = neuProds[i][k][1];\r\n            check = true;\r\n          }\r\n        }\r\n        if (check == false) {\r\n          outputArr[i][j][1] = [];\r\n        }\r\n      }\r\n    }\r\n    setFilter([...outputArr]);\r\n  }, [searchChar]);*/\r\n  ////////////////////////////////////////////////////////////////\r\n  const newFilter = (filter, n, m, setter, prods) => {\r\n    //setFilter([...filter]);\r\n    filterSetts.current = [n, m, setter, prods];\r\n    if (filterSetts.current[2]) {\r\n      let newFilt = addFilter(filterSetts.current);\r\n      filterDeleteList.current = [];\r\n      newFilt[0][0].map((item, index) => {\r\n        if (index > 0) {\r\n          filterDeleteList.current.push(item);\r\n        }\r\n      });\r\n      let size = 25;\r\n      let newProds = [];\r\n      for (var i = 0; i < newFilt[1][0][newFilt[1][1] - 1].length; i += size) {\r\n        newProds.push(newFilt[1][0][newFilt[1][1] - 1].slice(i, i + size));\r\n      }\r\n      allprods = [...newProds];\r\n\r\n      setFilter([...newFilt[0][0][newFilt[0][1] - 1][0]]);\r\n    } else {\r\n      let newFilt = deleteFilter(filterSetts.current);\r\n      filterDeleteList.current = [];\r\n      newFilt[0][0].map((item, index) => {\r\n        if (index > 0) {\r\n          filterDeleteList.current.push(item);\r\n        }\r\n      });\r\n      let size = 25;\r\n      let newProds = [];\r\n      for (var i = 0; i < newFilt[1][0][newFilt[1][1] - 1].length; i += size) {\r\n        newProds.push(newFilt[1][0][newFilt[1][1] - 1].slice(i, i + size));\r\n      }\r\n      allprods = [...newProds];\r\n      setFilter([...newFilt[0][0][newFilt[0][1] - 1][0]]);\r\n    }\r\n  };\r\n\r\n  const addFilter = (filtersetts) => {\r\n    let length1 = filterlist.current.length;\r\n    let length2 = prodlist.current.length;\r\n    let allprds = [];\r\n    //console.log(filterlist.current[length1 - 1][1]);\r\n    //console.log(filtersetts[0]);\r\n    if (filtersetts[0] == filterlist.current[length1 - 1][1]) {\r\n      allprds = filtersetts[3].concat(prodlist.current[length2 - 1]);\r\n    } else {\r\n      allprds = filtersetts[3];\r\n    }\r\n    prodlist.current.push(allprds);\r\n\r\n    filterlist.current.push([\r\n      except(\r\n        filtersetts[0],\r\n        prodlist.current[length2],\r\n        filterlist.current[length1 - 1][0]\r\n      ),\r\n      filtersetts[0],\r\n      filtersetts[1],\r\n    ]);\r\n    //console.log(filterlist.current);\r\n    //console.log(prodlist.current);\r\n    let endarr = [\r\n      [filterlist.current, filterlist.current.length],\r\n      [prodlist.current, prodlist.current.length],\r\n    ];\r\n    return endarr;\r\n  };\r\n  const deleteFilter = (filtersetts) => {\r\n    let length1 = filterlist.current.length;\r\n    let length2 = prodlist.current.length;\r\n    let allprds = [];\r\n    let ind;\r\n    for (let i = 0; i < length1; i++) {\r\n      if (filterlist.current[i][2] == filtersetts[1]) {\r\n        ind = i;\r\n      }\r\n    }\r\n    filterlist.current.splice(ind, 1);\r\n    prodlist.current.splice(ind, 1);\r\n\r\n    for (let i = 1; i < filterlist.current.length; i++) {\r\n      allprds = [];\r\n      let currentProd = [filterlist.current[i][1], filterlist.current[i][2]];\r\n      for (\r\n        let j = 0;\r\n        j < filterlist.current[i - 1][0][currentProd[0]].length;\r\n        j++\r\n      ) {\r\n        if (\r\n          filterlist.current[i - 1][0][currentProd[0]][j][0] == currentProd[1]\r\n        ) {\r\n          if (currentProd[0] == filterlist.current[i - 1][1]) {\r\n            allprds = prodlist.current[i - 1].concat(\r\n              filterlist.current[i - 1][0][currentProd[0]][j][1]\r\n            );\r\n          } else {\r\n            allprds = filterlist.current[i - 1][0][currentProd[0]][j][1];\r\n          }\r\n        }\r\n      }\r\n      prodlist.current[i] = allprds;\r\n      filterlist.current[i][0] = except(\r\n        filterlist.current[i][1],\r\n        prodlist.current[i],\r\n        filterlist.current[i - 1][0]\r\n      );\r\n    }\r\n    //console.log(filterlist.current);\r\n    //console.log(prodlist.current);\r\n    let endarr = [\r\n      [filterlist.current, filterlist.current.length],\r\n      [prodlist.current, prodlist.current.length],\r\n    ];\r\n    return endarr;\r\n  };\r\n  console.log(allprods);\r\n  return (\r\n    <div style={{ overflowY: \"hidden\" }}>\r\n      <TopDiv>\r\n        <Navbar_produkte />\r\n      </TopDiv>\r\n      <MidDiv1>\r\n        <SearchBar searchOn={searchText} />\r\n        <SetProducts\r\n          deactProd={deactProd}\r\n          filter={filter}\r\n          setFilter={newFilter}\r\n          deleteList={filterDeleteList.current}\r\n        />\r\n        {searcher.current ? (\r\n          find.current ? (\r\n            <Products\r\n              allprods_display={allprods}\r\n              filter={filter}\r\n              filterSetts={filterSetts.current}\r\n            />\r\n          ) : (\r\n            <div>\r\n              <h1>nothing found</h1>\r\n            </div>\r\n          )\r\n        ) : (\r\n          <Products\r\n            allprods_display={allprods}\r\n            filter={filter}\r\n            filterSetts={filterSetts.current}\r\n          />\r\n        )}\r\n      </MidDiv1>\r\n      <MidDiv2>\r\n        <MidCards />\r\n      </MidDiv2>\r\n      <FootDiv></FootDiv>\r\n    </div>\r\n  );\r\n}\r\n//<Products allprods_display={allprods} filter={filterMaker(allprods)} />\r\nexport default ProduktePage;\r\n////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\nconst except = (out, prods, lastprods) => {\r\n  let neuProds = [];\r\n  switch (out) {\r\n    case 0:\r\n      neuProds = [\r\n        lastprods[0],\r\n        filterMarke(prods),\r\n        filterMaterial(prods),\r\n        filterFarbe(prods),\r\n      ];\r\n      break;\r\n    case 1:\r\n      neuProds = [\r\n        filterKategorie(prods),\r\n        lastprods[1],\r\n        filterMaterial(prods),\r\n        filterFarbe(prods),\r\n      ];\r\n      break;\r\n    case 2:\r\n      neuProds = [\r\n        filterKategorie(prods),\r\n        filterMarke(prods),\r\n        lastprods[2],\r\n        filterFarbe(prods),\r\n      ];\r\n      break;\r\n    case 3:\r\n      neuProds = [\r\n        filterKategorie(prods),\r\n        filterMarke(prods),\r\n        filterMaterial(prods),\r\n        lastprods[3],\r\n      ];\r\n      break;\r\n  }\r\n  let prod = [...lastprods];\r\n  let endprods = [...neuProds];\r\n  let check = false;\r\n  for (let i = 0; i < prod.length; i++) {\r\n    for (let j = 0; j < prod[i].length; j++) {\r\n      check = false;\r\n      for (let k = 0; k < neuProds[i].length; k++) {\r\n        if (prod[i][j][0] == neuProds[i][k][0]) {\r\n          check = true;\r\n        }\r\n      }\r\n      if (check !== true) {\r\n        let a = [...prod[i][j]];\r\n        a[1] = [];\r\n        endprods[i].push(a);\r\n      }\r\n    }\r\n  }\r\n  //console.log(neuProds);\r\n  //console.log(endprods);\r\n  return endprods;\r\n};\r\n\r\n////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\nconst filterKategorie = (prods) => {\r\n  let filter = [];\r\n  let uniq = [];\r\n  let endArr = [];\r\n  uniq = [\"Ohrring\", \"Ohrstecker\", \"Kette\", \"Ring\", \"Armband\", \"Creole\"];\r\n  endArr = [];\r\n  uniq.map((item, index) => {\r\n    prods.map((prct, ind) => {\r\n      if (prct.product_keywords != null) {\r\n        let prodKategorie = prct.product_keywords.toLowerCase();\r\n        let savedKategorie = item.toLowerCase();\r\n        if (prodKategorie.search(savedKategorie) != -1) {\r\n          endArr.push(prct);\r\n        }\r\n      }\r\n    });\r\n    filter.push([item, endArr, false]);\r\n    endArr = [];\r\n  });\r\n  return filter;\r\n};\r\n////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n\r\nconst filterMarke = (prods) => {\r\n  let filter = [];\r\n  let uniq = [];\r\n  let endArr = [];\r\n  let markenArr = [];\r\n  prods.map((prod, ind) => {\r\n    if (prod.product_marke != null) {\r\n      markenArr.push(prod.product_marke.toLowerCase());\r\n    }\r\n  });\r\n  uniq = [...new Set(markenArr)];\r\n\r\n  uniq.map((item, index) => {\r\n    prods.map((prct, ind) => {\r\n      if (prct.product_marke != null) {\r\n        let prodMarke = prct.product_marke.toLowerCase();\r\n        let savedMarke = item.toLowerCase();\r\n        if (prodMarke.search(savedMarke) != -1) {\r\n          endArr.push(prct);\r\n        }\r\n      }\r\n    });\r\n    filter.push([item, endArr, false]);\r\n    endArr = [];\r\n  });\r\n  return filter;\r\n};\r\n////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\nconst filterMaterial = (prods) => {\r\n  let filter = [];\r\n  let uniq = [];\r\n  let endArr = [];\r\n  let materialArr = [];\r\n  prods.map((prod, ind) => {\r\n    if (prod.product_material != null) {\r\n      materialArr.push(prod.product_material.toLowerCase());\r\n    }\r\n  });\r\n  uniq = [...new Set(materialArr)];\r\n\r\n  uniq.map((item, index) => {\r\n    prods.map((prct, ind) => {\r\n      if (prct.product_material != null) {\r\n        let prodMaterial = prct.product_material.toLowerCase();\r\n        let savedMaterial = item.toLowerCase();\r\n        if (prodMaterial.search(savedMaterial) != -1) {\r\n          endArr.push(prct);\r\n        }\r\n      }\r\n    });\r\n    filter.push([item, endArr, false]);\r\n    endArr = [];\r\n  });\r\n  return filter;\r\n};\r\n////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\nconst filterFarbe = (prods) => {\r\n  let filter = [];\r\n  let uniq = [];\r\n  let endArr = [];\r\n  let farbenArr = [];\r\n  prods.map((prod, ind) => {\r\n    if (prod.product_farbe != null) {\r\n      farbenArr.push(prod.product_farbe.toLowerCase());\r\n    }\r\n  });\r\n  uniq = [...new Set(farbenArr)];\r\n\r\n  uniq.map((item, index) => {\r\n    prods.map((prct, ind) => {\r\n      if (prct.product_farbe != null) {\r\n        let prodFarbe = prct.product_farbe.toLowerCase();\r\n        let savedFarbe = item.toLowerCase();\r\n        if (prodFarbe.search(savedFarbe) != -1) {\r\n          endArr.push(prct);\r\n        }\r\n      }\r\n    });\r\n    filter.push([item, endArr, false]);\r\n    endArr = [];\r\n  });\r\n  return filter;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}