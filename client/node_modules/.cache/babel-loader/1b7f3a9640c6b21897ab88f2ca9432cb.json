{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fr3ak\\\\Desktop\\\\Coding\\\\dia\\\\client\\\\src\\\\components\\\\pages\\\\ProduktePage.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport Navbar_produkte from \"../single_comps/produktePageComps/Navbar_produkte\";\nimport SearchBar from \"../single_comps/produktePageComps/SearchBar\";\nimport SetProducts from \"../single_comps/produktePageComps/SetProducts\";\nimport Products from \"../single_comps/produktePageComps/Products\";\nimport MidCards from \"../single_comps/produktePageComps/MidCards\";\nimport { useRef, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopDiv = styled.div`\n  width: 100%;\n  height: 800px;\n  overflow: hidden;\n`;\n_c = TopDiv;\nconst MidDiv1 = styled.div`\n  width: 100%;\n  margin-top: 10px;\n`;\n_c2 = MidDiv1;\nconst MidDiv2 = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 100%;\n  height: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 550px;\n\n  border: 1px solid black;\n`;\n_c3 = MidDiv2;\nconst FootDiv = styled.div`\n  margin-top: 140px;\n  width: 100%;\n  height: 300px;\n`;\n_c4 = FootDiv;\n\nfunction ProduktePage(_ref) {\n  _s();\n\n  let {\n    allprods_display,\n    deactProd,\n    shopList\n  } = _ref;\n  const [allprods, setAllProds] = useState(allprods_display);\n  const [pageNumber, setPageNumber] = useState(0);\n  const filterDeleteList = useRef();\n  const [filter, setFilter] = useState([filterKategorie(allprods.flat()), filterMarke(allprods.flat()), filterMaterial(allprods.flat()), filterFarbe(allprods.flat())]);\n  const filterSetts = useRef([]);\n  const filterlist = useRef([[filter, 999, \"X\"]]);\n  const prodlist = useRef([allprods.flat()]); ////////////////////////////////////////////////////////////////\n\n  useEffect(() => {\n    filterDeleteList.current = [];\n    setFilter([filterKategorie(allprods_display.flat()), filterMarke(allprods_display.flat()), filterMaterial(allprods_display.flat()), filterFarbe(allprods_display.flat())]);\n    filterlist.current = [[filter, 999, \"X\"]];\n    prodlist.current = [allprods.flat()];\n    setAllProds([...allprods_display]);\n  }, [allprods_display]); ////////////////////////////////////////////////////////////////\n\n  const newFilter = (filter, n, m, setter, prods) => {\n    filterSetts.current = [n, m, setter, prods];\n    setPageNumber(0);\n\n    if (prods.length > 0) {\n      if (filterSetts.current[2]) {\n        let newFilt = addFilter(filterSetts.current);\n        filterDeleteList.current = [];\n        newFilt[0][0].map((item, index) => {\n          if (index > 0) {\n            filterDeleteList.current.push(item);\n          }\n        });\n        let size = 25;\n        let newProds = [];\n\n        for (var i = 0; i < newFilt[1][0][newFilt[1][1] - 1].length; i += size) {\n          newProds.push(newFilt[1][0][newFilt[1][1] - 1].slice(i, i + size));\n        }\n\n        setAllProds([...newProds]);\n        setFilter([...newFilt[0][0][newFilt[0][1] - 1][0]]);\n      } else {\n        let newFilt = deleteFilter(filterSetts.current);\n        filterDeleteList.current = [];\n        newFilt[0][0].map((item, index) => {\n          if (index > 0) {\n            filterDeleteList.current.push(item);\n          }\n        });\n        let size = 25;\n        let newProds = [];\n\n        for (var i = 0; i < newFilt[1][0][newFilt[1][1] - 1].length; i += size) {\n          newProds.push(newFilt[1][0][newFilt[1][1] - 1].slice(i, i + size));\n        }\n\n        setAllProds([...newProds]);\n        setFilter([...newFilt[0][0][newFilt[0][1] - 1][0]]); //console.log(filterDeleteList.current);\n        //console.log(newFilt[0][0]);\n      }\n    } else {\n      window.alert(\"no products\");\n    }\n  };\n\n  const addFilter = filtersetts => {\n    let length1 = filterlist.current.length;\n    let length2 = prodlist.current.length;\n    let allprds = [];\n\n    if (filtersetts[0] == filterlist.current[length1 - 1][1]) {\n      allprds = filtersetts[3].concat(prodlist.current[length2 - 1]);\n    } else {\n      allprds = filtersetts[3];\n    }\n\n    prodlist.current.push(allprds);\n    filterlist.current.push([except(filtersetts[0], prodlist.current[length2], filterlist.current[length1 - 1][0]), filtersetts[0], filtersetts[1]]);\n\n    if (filterlist.current.length > 1) {\n      for (let i = 1; i < filterlist.current.length; i++) {\n        for (let j = 0; j < filterlist.current[i][0][filterlist.current[i][1]].length; j++) {\n          if (filterlist.current[i][2] == filterlist.current[i][0][filterlist.current[i][1]][j][0]) {\n            filterlist.current[length1][0][filterlist.current[i][1]][j][2] = true;\n          }\n        }\n      }\n    } //console.log(filterlist.current);\n    // console.log(prodlist.current);\n\n\n    let endarr = [[filterlist.current, filterlist.current.length], [prodlist.current, prodlist.current.length]];\n    return endarr;\n  };\n\n  const deleteFilter = filtersetts => {\n    let length1 = filterlist.current.length;\n    let length2 = prodlist.current.length;\n    let allprds = [];\n    let ind;\n\n    for (let i = 0; i < length1; i++) {\n      if (filterlist.current[i][2] == filtersetts[1]) {\n        ind = i;\n      }\n    }\n\n    filterlist.current.splice(ind, 1);\n    prodlist.current.splice(ind, 1);\n\n    for (let i = 1; i < filterlist.current.length; i++) {\n      allprds = [];\n      let currentProd = [filterlist.current[i][1], filterlist.current[i][2]];\n\n      for (let j = 0; j < filterlist.current[i - 1][0][currentProd[0]].length; j++) {\n        if (filterlist.current[i - 1][0][currentProd[0]][j][0] == currentProd[1]) {\n          if (currentProd[0] == filterlist.current[i - 1][1]) {\n            allprds = prodlist.current[i - 1].concat(filterlist.current[i - 1][0][currentProd[0]][j][1]);\n          } else {\n            allprds = filterlist.current[i - 1][0][currentProd[0]][j][1];\n          }\n        }\n      }\n\n      prodlist.current[i] = allprds;\n      filterlist.current[i][0] = except(filterlist.current[i][1], prodlist.current[i], filterlist.current[i - 1][0]);\n    }\n\n    if (filterlist.current.length > 1) {\n      for (let a = 1; a < filterlist.current.length; a++) {\n        for (let b = 0; b < filterlist.current[a][0][filterlist.current[a][1]].length; b++) {\n          if (filterlist.current[a][2] == filterlist.current[a][0][filterlist.current[a][1]][b][0]) {\n            filterlist.current[filterlist.current.length - 1][0][filterlist.current[a][1]][b][2] = true;\n          }\n        }\n      }\n    }\n\n    let endarr = [[filterlist.current, filterlist.current.length], [prodlist.current, prodlist.current.length]]; //console.log(filterlist.current);\n    //console.log(prodlist.current);\n\n    return endarr;\n  }; //console.log(allprods);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflowY: \"hidden\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TopDiv, {\n      children: /*#__PURE__*/_jsxDEV(Navbar_produkte, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MidDiv1, {\n      children: [/*#__PURE__*/_jsxDEV(SetProducts, {\n        deactProd: deactProd,\n        shopList: shopList,\n        filter: filter,\n        setFilter: newFilter,\n        deleteList: filterDeleteList.current,\n        filterlist: filterlist.current\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Products, {\n        allprods_display: allprods,\n        filter: filter,\n        filterSetts: filterSetts.current,\n        pPage: pageNumber,\n        setpPage: number => {\n          setPageNumber(number);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MidDiv2, {\n      children: /*#__PURE__*/_jsxDEV(MidCards, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FootDiv, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProduktePage, \"ZnbFFKCpVJWeICrSq9aWQTRt52A=\");\n\n_c5 = ProduktePage;\nexport default ProduktePage; ////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n\nconst except = (out, prods, lastprods) => {\n  let neuProds = [];\n\n  switch (out) {\n    case 0:\n      neuProds = [lastprods[0], filterMarke(prods), filterMaterial(prods), filterFarbe(prods)];\n      break;\n\n    case 1:\n      neuProds = [filterKategorie(prods), lastprods[1], filterMaterial(prods), filterFarbe(prods)];\n      break;\n\n    case 2:\n      neuProds = [filterKategorie(prods), filterMarke(prods), lastprods[2], filterFarbe(prods)];\n      break;\n\n    case 3:\n      neuProds = [filterKategorie(prods), filterMarke(prods), filterMaterial(prods), lastprods[3]];\n      break;\n  }\n\n  let prod = [...lastprods];\n  let endprods = [...neuProds];\n  let check = false;\n\n  for (let i = 0; i < prod.length; i++) {\n    for (let j = 0; j < prod[i].length; j++) {\n      check = false;\n\n      for (let k = 0; k < neuProds[i].length; k++) {\n        if (prod[i][j][0] == neuProds[i][k][0]) {\n          check = true;\n        }\n      }\n\n      if (check !== true) {\n        let a = [...prod[i][j]];\n        a[1] = [];\n        endprods[i].push(a);\n      }\n    }\n  } //console.log(neuProds);\n  //console.log(endprods);\n\n\n  return endprods;\n}; ////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n\n\nconst filterKategorie = prods => {\n  let filter = [];\n  let uniq = [];\n  let endArr = [];\n  uniq = [\"Armband\", \"Creole\", \"Damenring\", \"Kette\", \"Ohrring\", \"Ohrstecker\", \"Charm\"];\n  endArr = [];\n  uniq.map((item, index) => {\n    prods.map((prct, ind) => {\n      if (prct.product_keywords != null) {\n        let prodKategorie = prct.product_keywords.toLowerCase();\n        let savedKategorie = item.toLowerCase();\n\n        if (prodKategorie.search(savedKategorie) != -1) {\n          endArr.push(prct);\n        }\n      }\n    });\n    filter.push([item, endArr, false]);\n    endArr = [[\"Armbänder\", [], false], [\"Ketten\", [], false], [\"Ringe\", [], false], [\"Armbänder\", [], false]];\n  });\n  console.log(filter);\n  var end = [];\n  return filter;\n}; ////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n\n\nconst filterMarke = prods => {\n  let filter = [];\n  let uniq = [];\n  let endArr = [];\n  let markenArr = [];\n  prods.map((prod, ind) => {\n    if (prod.product_marke != null) {\n      markenArr.push(prod.product_marke.toLowerCase());\n    }\n  });\n  uniq = [...new Set(markenArr)];\n  uniq.map((item, index) => {\n    prods.map((prct, ind) => {\n      if (prct.product_marke != null) {\n        let prodMarke = prct.product_marke.toLowerCase();\n        let savedMarke = item.toLowerCase();\n\n        if (prodMarke.search(savedMarke) != -1) {\n          endArr.push(prct);\n        }\n      }\n    });\n    filter.push([item, endArr, false]);\n    endArr = [];\n  });\n  return filter;\n}; ////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n\n\nconst filterMaterial = prods => {\n  let filter = [];\n  let uniq = [];\n  let endArr = [];\n  let materialArr = [];\n  prods.map((prod, ind) => {\n    if (prod.product_material != null) {\n      materialArr.push(prod.product_material.toLowerCase());\n    }\n  });\n  uniq = [...new Set(materialArr)];\n  uniq.map((item, index) => {\n    prods.map((prct, ind) => {\n      if (prct.product_material != null) {\n        let prodMaterial = prct.product_material.toLowerCase();\n        let savedMaterial = item.toLowerCase();\n\n        if (prodMaterial.search(savedMaterial) != -1) {\n          endArr.push(prct);\n        }\n      }\n    });\n    filter.push([item, endArr, false]);\n    endArr = [];\n  });\n  return filter;\n}; ////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n\n\nconst filterFarbe = prods => {\n  let filter = [];\n  let uniq = [];\n  let endArr = [];\n  let farbenArr = [];\n  prods.map((prod, ind) => {\n    if (prod.product_farbe != null) {\n      farbenArr.push(prod.product_farbe.toLowerCase());\n    }\n  });\n  uniq = [...new Set(farbenArr)];\n  uniq.map((item, index) => {\n    prods.map((prct, ind) => {\n      if (prct.product_farbe != null) {\n        let prodFarbe = prct.product_farbe.toLowerCase();\n        let savedFarbe = item.toLowerCase();\n\n        if (prodFarbe.search(savedFarbe) != -1) {\n          endArr.push(prct);\n        }\n      }\n    });\n    filter.push([item, endArr, false]);\n    endArr = [];\n  });\n  return filter;\n};\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"TopDiv\");\n$RefreshReg$(_c2, \"MidDiv1\");\n$RefreshReg$(_c3, \"MidDiv2\");\n$RefreshReg$(_c4, \"FootDiv\");\n$RefreshReg$(_c5, \"ProduktePage\");","map":{"version":3,"sources":["C:/Users/fr3ak/Desktop/Coding/dia/client/src/components/pages/ProduktePage.js"],"names":["styled","Navbar_produkte","SearchBar","SetProducts","Products","MidCards","useRef","useState","useEffect","TopDiv","div","MidDiv1","MidDiv2","FootDiv","ProduktePage","allprods_display","deactProd","shopList","allprods","setAllProds","pageNumber","setPageNumber","filterDeleteList","filter","setFilter","filterKategorie","flat","filterMarke","filterMaterial","filterFarbe","filterSetts","filterlist","prodlist","current","newFilter","n","m","setter","prods","length","newFilt","addFilter","map","item","index","push","size","newProds","i","slice","deleteFilter","window","alert","filtersetts","length1","length2","allprds","concat","except","j","endarr","ind","splice","currentProd","a","b","overflowY","number","out","lastprods","neuProds","prod","endprods","check","k","uniq","endArr","prct","product_keywords","prodKategorie","toLowerCase","savedKategorie","search","console","log","end","markenArr","product_marke","Set","prodMarke","savedMarke","materialArr","product_material","prodMaterial","savedMaterial","farbenArr","product_farbe","prodFarbe","savedFarbe"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\r\nimport Navbar_produkte from \"../single_comps/produktePageComps/Navbar_produkte\";\r\nimport SearchBar from \"../single_comps/produktePageComps/SearchBar\";\r\nimport SetProducts from \"../single_comps/produktePageComps/SetProducts\";\r\nimport Products from \"../single_comps/produktePageComps/Products\";\r\nimport MidCards from \"../single_comps/produktePageComps/MidCards\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\n\r\nconst TopDiv = styled.div`\r\n  width: 100%;\r\n  height: 800px;\r\n  overflow: hidden;\r\n`;\r\nconst MidDiv1 = styled.div`\r\n  width: 100%;\r\n  margin-top: 10px;\r\n`;\r\nconst MidDiv2 = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  height: 800px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 550px;\r\n\r\n  border: 1px solid black;\r\n`;\r\nconst FootDiv = styled.div`\r\n  margin-top: 140px;\r\n  width: 100%;\r\n  height: 300px;\r\n`;\r\nfunction ProduktePage({ allprods_display, deactProd, shopList }) {\r\n  const [allprods, setAllProds] = useState(allprods_display);\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  const filterDeleteList = useRef();\r\n  const [filter, setFilter] = useState([\r\n    filterKategorie(allprods.flat()),\r\n    filterMarke(allprods.flat()),\r\n    filterMaterial(allprods.flat()),\r\n    filterFarbe(allprods.flat()),\r\n  ]);\r\n  const filterSetts = useRef([]);\r\n  const filterlist = useRef([[filter, 999, \"X\"]]);\r\n  const prodlist = useRef([allprods.flat()]);\r\n  ////////////////////////////////////////////////////////////////\r\n  useEffect(() => {\r\n    filterDeleteList.current = [];\r\n    setFilter([\r\n      filterKategorie(allprods_display.flat()),\r\n      filterMarke(allprods_display.flat()),\r\n      filterMaterial(allprods_display.flat()),\r\n      filterFarbe(allprods_display.flat()),\r\n    ]);\r\n    filterlist.current = [[filter, 999, \"X\"]];\r\n    prodlist.current = [allprods.flat()];\r\n    setAllProds([...allprods_display]);\r\n  }, [allprods_display]);\r\n  ////////////////////////////////////////////////////////////////\r\n  const newFilter = (filter, n, m, setter, prods) => {\r\n    filterSetts.current = [n, m, setter, prods];\r\n    setPageNumber(0);\r\n    if (prods.length > 0) {\r\n      if (filterSetts.current[2]) {\r\n        let newFilt = addFilter(filterSetts.current);\r\n        filterDeleteList.current = [];\r\n        newFilt[0][0].map((item, index) => {\r\n          if (index > 0) {\r\n            filterDeleteList.current.push(item);\r\n          }\r\n        });\r\n        let size = 25;\r\n        let newProds = [];\r\n        for (\r\n          var i = 0;\r\n          i < newFilt[1][0][newFilt[1][1] - 1].length;\r\n          i += size\r\n        ) {\r\n          newProds.push(newFilt[1][0][newFilt[1][1] - 1].slice(i, i + size));\r\n        }\r\n        setAllProds([...newProds]);\r\n        setFilter([...newFilt[0][0][newFilt[0][1] - 1][0]]);\r\n      } else {\r\n        let newFilt = deleteFilter(filterSetts.current);\r\n        filterDeleteList.current = [];\r\n        newFilt[0][0].map((item, index) => {\r\n          if (index > 0) {\r\n            filterDeleteList.current.push(item);\r\n          }\r\n        });\r\n\r\n        let size = 25;\r\n        let newProds = [];\r\n        for (\r\n          var i = 0;\r\n          i < newFilt[1][0][newFilt[1][1] - 1].length;\r\n          i += size\r\n        ) {\r\n          newProds.push(newFilt[1][0][newFilt[1][1] - 1].slice(i, i + size));\r\n        }\r\n        setAllProds([...newProds]);\r\n        setFilter([...newFilt[0][0][newFilt[0][1] - 1][0]]);\r\n        //console.log(filterDeleteList.current);\r\n        //console.log(newFilt[0][0]);\r\n      }\r\n    } else {\r\n      window.alert(\"no products\");\r\n    }\r\n  };\r\n  const addFilter = (filtersetts) => {\r\n    let length1 = filterlist.current.length;\r\n    let length2 = prodlist.current.length;\r\n    let allprds = [];\r\n    if (filtersetts[0] == filterlist.current[length1 - 1][1]) {\r\n      allprds = filtersetts[3].concat(prodlist.current[length2 - 1]);\r\n    } else {\r\n      allprds = filtersetts[3];\r\n    }\r\n    prodlist.current.push(allprds);\r\n\r\n    filterlist.current.push([\r\n      except(\r\n        filtersetts[0],\r\n        prodlist.current[length2],\r\n        filterlist.current[length1 - 1][0]\r\n      ),\r\n      filtersetts[0],\r\n      filtersetts[1],\r\n    ]);\r\n    if (filterlist.current.length > 1) {\r\n      for (let i = 1; i < filterlist.current.length; i++) {\r\n        for (\r\n          let j = 0;\r\n          j < filterlist.current[i][0][filterlist.current[i][1]].length;\r\n          j++\r\n        ) {\r\n          if (\r\n            filterlist.current[i][2] ==\r\n            filterlist.current[i][0][filterlist.current[i][1]][j][0]\r\n          ) {\r\n            filterlist.current[length1][0][filterlist.current[i][1]][\r\n              j\r\n            ][2] = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    //console.log(filterlist.current);\r\n    // console.log(prodlist.current);\r\n    let endarr = [\r\n      [filterlist.current, filterlist.current.length],\r\n      [prodlist.current, prodlist.current.length],\r\n    ];\r\n    return endarr;\r\n  };\r\n  const deleteFilter = (filtersetts) => {\r\n    let length1 = filterlist.current.length;\r\n    let length2 = prodlist.current.length;\r\n    let allprds = [];\r\n    let ind;\r\n    for (let i = 0; i < length1; i++) {\r\n      if (filterlist.current[i][2] == filtersetts[1]) {\r\n        ind = i;\r\n      }\r\n    }\r\n    filterlist.current.splice(ind, 1);\r\n    prodlist.current.splice(ind, 1);\r\n\r\n    for (let i = 1; i < filterlist.current.length; i++) {\r\n      allprds = [];\r\n      let currentProd = [filterlist.current[i][1], filterlist.current[i][2]];\r\n      for (\r\n        let j = 0;\r\n        j < filterlist.current[i - 1][0][currentProd[0]].length;\r\n        j++\r\n      ) {\r\n        if (\r\n          filterlist.current[i - 1][0][currentProd[0]][j][0] == currentProd[1]\r\n        ) {\r\n          if (currentProd[0] == filterlist.current[i - 1][1]) {\r\n            allprds = prodlist.current[i - 1].concat(\r\n              filterlist.current[i - 1][0][currentProd[0]][j][1]\r\n            );\r\n          } else {\r\n            allprds = filterlist.current[i - 1][0][currentProd[0]][j][1];\r\n          }\r\n        }\r\n      }\r\n      prodlist.current[i] = allprds;\r\n      filterlist.current[i][0] = except(\r\n        filterlist.current[i][1],\r\n        prodlist.current[i],\r\n        filterlist.current[i - 1][0]\r\n      );\r\n    }\r\n\r\n    if (filterlist.current.length > 1) {\r\n      for (let a = 1; a < filterlist.current.length; a++) {\r\n        for (\r\n          let b = 0;\r\n          b < filterlist.current[a][0][filterlist.current[a][1]].length;\r\n          b++\r\n        ) {\r\n          if (\r\n            filterlist.current[a][2] ==\r\n            filterlist.current[a][0][filterlist.current[a][1]][b][0]\r\n          ) {\r\n            filterlist.current[filterlist.current.length - 1][0][\r\n              filterlist.current[a][1]\r\n            ][b][2] = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    let endarr = [\r\n      [filterlist.current, filterlist.current.length],\r\n      [prodlist.current, prodlist.current.length],\r\n    ];\r\n    //console.log(filterlist.current);\r\n    //console.log(prodlist.current);\r\n    return endarr;\r\n  };\r\n  //console.log(allprods);\r\n  return (\r\n    <div style={{ overflowY: \"hidden\" }}>\r\n      <TopDiv>\r\n        <Navbar_produkte />\r\n      </TopDiv>\r\n      <MidDiv1>\r\n        <SetProducts\r\n          deactProd={deactProd}\r\n          shopList={shopList}\r\n          filter={filter}\r\n          setFilter={newFilter}\r\n          deleteList={filterDeleteList.current}\r\n          filterlist={filterlist.current}\r\n        />\r\n        <Products\r\n          allprods_display={allprods}\r\n          filter={filter}\r\n          filterSetts={filterSetts.current}\r\n          pPage={pageNumber}\r\n          setpPage={(number) => {\r\n            setPageNumber(number);\r\n          }}\r\n        />\r\n      </MidDiv1>\r\n      <MidDiv2>\r\n        <MidCards />\r\n      </MidDiv2>\r\n      <FootDiv></FootDiv>\r\n    </div>\r\n  );\r\n}\r\nexport default ProduktePage;\r\n////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\nconst except = (out, prods, lastprods) => {\r\n  let neuProds = [];\r\n  switch (out) {\r\n    case 0:\r\n      neuProds = [\r\n        lastprods[0],\r\n        filterMarke(prods),\r\n        filterMaterial(prods),\r\n        filterFarbe(prods),\r\n      ];\r\n      break;\r\n    case 1:\r\n      neuProds = [\r\n        filterKategorie(prods),\r\n        lastprods[1],\r\n        filterMaterial(prods),\r\n        filterFarbe(prods),\r\n      ];\r\n      break;\r\n    case 2:\r\n      neuProds = [\r\n        filterKategorie(prods),\r\n        filterMarke(prods),\r\n        lastprods[2],\r\n        filterFarbe(prods),\r\n      ];\r\n      break;\r\n    case 3:\r\n      neuProds = [\r\n        filterKategorie(prods),\r\n        filterMarke(prods),\r\n        filterMaterial(prods),\r\n        lastprods[3],\r\n      ];\r\n      break;\r\n  }\r\n  let prod = [...lastprods];\r\n  let endprods = [...neuProds];\r\n  let check = false;\r\n  for (let i = 0; i < prod.length; i++) {\r\n    for (let j = 0; j < prod[i].length; j++) {\r\n      check = false;\r\n      for (let k = 0; k < neuProds[i].length; k++) {\r\n        if (prod[i][j][0] == neuProds[i][k][0]) {\r\n          check = true;\r\n        }\r\n      }\r\n      if (check !== true) {\r\n        let a = [...prod[i][j]];\r\n        a[1] = [];\r\n        endprods[i].push(a);\r\n      }\r\n    }\r\n  }\r\n  //console.log(neuProds);\r\n  //console.log(endprods);\r\n  return endprods;\r\n};\r\n\r\n////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\nconst filterKategorie = (prods) => {\r\n  let filter = [];\r\n  let uniq = [];\r\n  let endArr = [];\r\n  uniq = [\r\n    \"Armband\",\r\n    \"Creole\",\r\n    \"Damenring\",\r\n    \"Kette\",\r\n    \"Ohrring\",\r\n    \"Ohrstecker\",\r\n    \"Charm\",\r\n  ];\r\n  endArr = [];\r\n  uniq.map((item, index) => {\r\n    prods.map((prct, ind) => {\r\n      if (prct.product_keywords != null) {\r\n        let prodKategorie = prct.product_keywords.toLowerCase();\r\n        let savedKategorie = item.toLowerCase();\r\n        if (prodKategorie.search(savedKategorie) != -1) {\r\n          endArr.push(prct);\r\n        }\r\n      }\r\n    });\r\n    filter.push([item, endArr, false]);\r\n    endArr = [\r\n      [\"Armbänder\", [], false],\r\n      [\"Ketten\", [], false],\r\n      [\"Ringe\", [], false],\r\n      [\"Armbänder\", [], false],\r\n    ];\r\n  });\r\n  console.log(filter)\r\n  var end = []\r\n  return filter;\r\n};\r\n////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n\r\nconst filterMarke = (prods) => {\r\n  let filter = [];\r\n  let uniq = [];\r\n  let endArr = [];\r\n  let markenArr = [];\r\n  prods.map((prod, ind) => {\r\n    if (prod.product_marke != null) {\r\n      markenArr.push(prod.product_marke.toLowerCase());\r\n    }\r\n  });\r\n  uniq = [...new Set(markenArr)];\r\n\r\n  uniq.map((item, index) => {\r\n    prods.map((prct, ind) => {\r\n      if (prct.product_marke != null) {\r\n        let prodMarke = prct.product_marke.toLowerCase();\r\n        let savedMarke = item.toLowerCase();\r\n        if (prodMarke.search(savedMarke) != -1) {\r\n          endArr.push(prct);\r\n        }\r\n      }\r\n    });\r\n    filter.push([item, endArr, false]);\r\n    endArr = [];\r\n  });\r\n  return filter;\r\n};\r\n////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\nconst filterMaterial = (prods) => {\r\n  let filter = [];\r\n  let uniq = [];\r\n  let endArr = [];\r\n  let materialArr = [];\r\n  prods.map((prod, ind) => {\r\n    if (prod.product_material != null) {\r\n      materialArr.push(prod.product_material.toLowerCase());\r\n    }\r\n  });\r\n  uniq = [...new Set(materialArr)];\r\n\r\n  uniq.map((item, index) => {\r\n    prods.map((prct, ind) => {\r\n      if (prct.product_material != null) {\r\n        let prodMaterial = prct.product_material.toLowerCase();\r\n        let savedMaterial = item.toLowerCase();\r\n        if (prodMaterial.search(savedMaterial) != -1) {\r\n          endArr.push(prct);\r\n        }\r\n      }\r\n    });\r\n    filter.push([item, endArr, false]);\r\n    endArr = [];\r\n  });\r\n  return filter;\r\n};\r\n////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\nconst filterFarbe = (prods) => {\r\n  let filter = [];\r\n  let uniq = [];\r\n  let endArr = [];\r\n  let farbenArr = [];\r\n  prods.map((prod, ind) => {\r\n    if (prod.product_farbe != null) {\r\n      farbenArr.push(prod.product_farbe.toLowerCase());\r\n    }\r\n  });\r\n  uniq = [...new Set(farbenArr)];\r\n\r\n  uniq.map((item, index) => {\r\n    prods.map((prct, ind) => {\r\n      if (prct.product_farbe != null) {\r\n        let prodFarbe = prct.product_farbe.toLowerCase();\r\n        let savedFarbe = item.toLowerCase();\r\n        if (prodFarbe.search(savedFarbe) != -1) {\r\n          endArr.push(prct);\r\n        }\r\n      }\r\n    });\r\n    filter.push([item, endArr, false]);\r\n    endArr = [];\r\n  });\r\n  return filter;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}