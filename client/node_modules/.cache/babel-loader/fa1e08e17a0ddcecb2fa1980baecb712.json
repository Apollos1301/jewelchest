{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abtin\\\\Desktop\\\\HTML\\\\dia\\\\client\\\\src\\\\components\\\\pages\\\\ProduktePage.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport Navbar_produkte from \"../single_comps/produktePageComps/Navbar_produkte\";\nimport SetProducts from \"../single_comps/produktePageComps/SetProducts\";\nimport Products from \"../single_comps/produktePageComps/Products\";\nimport MidCards from \"../single_comps/produktePageComps/MidCards\";\nimport { useRef, useState, useEffect } from \"react\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopDiv = styled.div`\n  width: 100%;\n  height: 800px;\n  overflow: hidden;\n`;\n_c = TopDiv;\nconst MidDiv1 = styled.div`\n  width: 100%;\n  margin-top: 10px;\n`;\n_c2 = MidDiv1;\nconst MidDiv2 = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 100%;\n  height: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 550px;\n\n  border: 1px solid black;\n`;\n_c3 = MidDiv2;\nconst FootDiv = styled.div`\n  margin-top: 140px;\n  width: 100%;\n  height: 300px;\n`;\n_c4 = FootDiv;\n\nfunction ProduktePage(_ref) {\n  _s();\n\n  let {\n    allprods_display,\n    deactProd,\n    shopList,\n    passProd\n  } = _ref;\n  const [likeList, setLikeList] = useState();\n  const [allprods, setAllProds] = useState(allprods_display);\n  const pageRef = useRef(0);\n  const [pageNumber, setPageNumber] = useState(pageRef.current);\n  const filterDeleteList = useRef();\n  const [filter, setFilter] = useState([filterKategorie(allprods.flat()), filterMarke(allprods.flat()), filterMaterial(allprods.flat()), filterFarbe(allprods.flat())]);\n  const filterSetts = useRef([]);\n  const filterlist = useRef([[filter, 999, \"X\"]]);\n  const prodlist = useRef([allprods.flat()]); ////////////////////////////////////////////////////////////////////////\n\n  const [loading, setLoader] = useState(false);\n  useEffect(() => {\n    let likelist = JSON.parse(localStorage.getItem(\"likes\"));\n    let newlikeList = [];\n\n    if (likelist != null) {\n      likelist.map((prod, index) => {\n        newlikeList.push(prod[2]);\n      });\n    }\n\n    setLikeList([...newlikeList]);\n    setLoader(true);\n    setTimeout(() => {\n      setLoader(false);\n    }, 1500);\n  }, []); ////////////////////////////////////////////////////////////////\n\n  useEffect(() => {\n    filterDeleteList.current = [];\n    setFilter([filterKategorie(allprods_display.flat()), filterMarke(allprods_display.flat()), filterMaterial(allprods_display.flat()), filterFarbe(allprods_display.flat())]);\n    let fil = [filterKategorie(allprods_display.flat()), filterMarke(allprods_display.flat()), filterMaterial(allprods_display.flat()), filterFarbe(allprods_display.flat())];\n    filterlist.current = [[fil, 999, \"X\"]];\n    prodlist.current = [allprods.flat()];\n    setAllProds([...allprods_display]);\n    setPageNumber(0);\n  }, [allprods_display]); ////////////////////////////////////////////////////////////////\n\n  const newFilter = (filter, n, m, setter, prods) => {\n    filterSetts.current = [n, m, setter, prods];\n    setPageNumber(0);\n\n    if (prods.length > 0) {\n      if (filterSetts.current[2]) {\n        let newFilt = addFilter(filterSetts.current);\n        filterDeleteList.current = [];\n        newFilt[0][0].map((item, index) => {\n          if (index > 0) {\n            filterDeleteList.current.push(item);\n          }\n        });\n        let size = 55;\n        let newProds = [];\n\n        for (var i = 0; i < newFilt[1][0][newFilt[1][1] - 1].length; i += size) {\n          newProds.push(newFilt[1][0][newFilt[1][1] - 1].slice(i, i + size));\n        }\n\n        setAllProds([...newProds]);\n        setFilter([...newFilt[0][0][newFilt[0][1] - 1][0]]);\n      } else {\n        let newFilt = deleteFilter(filterSetts.current);\n        filterDeleteList.current = [];\n        newFilt[0][0].map((item, index) => {\n          if (index > 0) {\n            filterDeleteList.current.push(item);\n          }\n        });\n        let size = 55;\n        let newProds = [];\n\n        for (var i = 0; i < newFilt[1][0][newFilt[1][1] - 1].length; i += size) {\n          newProds.push(newFilt[1][0][newFilt[1][1] - 1].slice(i, i + size));\n        }\n\n        setAllProds([...newProds]);\n        setFilter([...newFilt[0][0][newFilt[0][1] - 1][0]]); //console.log(filterDeleteList.current);\n        //console.log(newFilt[0][0]);\n      }\n    } else {\n      window.alert(\"no products\");\n    }\n  };\n\n  const addFilter = filtersetts => {\n    let length1 = filterlist.current.length;\n    let length2 = prodlist.current.length;\n    let allprds = [];\n\n    if (filtersetts[0] == filterlist.current[length1 - 1][1]) {\n      allprds = filtersetts[3].concat(prodlist.current[length2 - 1]);\n    } else {\n      allprds = filtersetts[3];\n    }\n\n    prodlist.current.push(allprds);\n    filterlist.current.push([except(filtersetts[0], prodlist.current[length2], filterlist.current[length1 - 1][0]), filtersetts[0], filtersetts[1]]);\n\n    if (filterlist.current.length > 1) {\n      for (let i = 1; i < filterlist.current.length; i++) {\n        for (let j = 0; j < filterlist.current[i][0][filterlist.current[i][1]].length; j++) {\n          if (filterlist.current[i][2] == filterlist.current[i][0][filterlist.current[i][1]][j][0]) {\n            filterlist.current[length1][0][filterlist.current[i][1]][j][2] = true;\n          }\n        }\n      }\n    } //console.log(filterlist.current);\n    // console.log(prodlist.current);\n\n\n    let endarr = [[filterlist.current, filterlist.current.length], [prodlist.current, prodlist.current.length]];\n    return endarr;\n  };\n\n  const deleteFilter = filtersetts => {\n    let length1 = filterlist.current.length;\n    let length2 = prodlist.current.length;\n    let allprds = [];\n    let ind;\n\n    for (let i = 0; i < length1; i++) {\n      if (filterlist.current[i][2] == filtersetts[1]) {\n        ind = i;\n      }\n    }\n\n    filterlist.current.splice(ind, 1);\n    prodlist.current.splice(ind, 1);\n\n    for (let i = 1; i < filterlist.current.length; i++) {\n      allprds = [];\n      let currentProd = [filterlist.current[i][1], filterlist.current[i][2]];\n\n      for (let j = 0; j < filterlist.current[i - 1][0][currentProd[0]].length; j++) {\n        if (filterlist.current[i - 1][0][currentProd[0]][j][0] == currentProd[1]) {\n          if (currentProd[0] == filterlist.current[i - 1][1]) {\n            allprds = prodlist.current[i - 1].concat(filterlist.current[i - 1][0][currentProd[0]][j][1]);\n          } else {\n            allprds = filterlist.current[i - 1][0][currentProd[0]][j][1];\n          }\n        }\n      }\n\n      prodlist.current[i] = allprds;\n      filterlist.current[i][0] = except(filterlist.current[i][1], prodlist.current[i], filterlist.current[i - 1][0]);\n    }\n\n    if (filterlist.current.length > 1) {\n      for (let a = 1; a < filterlist.current.length; a++) {\n        for (let b = 0; b < filterlist.current[a][0][filterlist.current[a][1]].length; b++) {\n          if (filterlist.current[a][2] == filterlist.current[a][0][filterlist.current[a][1]][b][0]) {\n            filterlist.current[filterlist.current.length - 1][0][filterlist.current[a][1]][b][2] = true;\n          }\n        }\n      }\n    }\n\n    let endarr = [[filterlist.current, filterlist.current.length], [prodlist.current, prodlist.current.length]]; //console.log(filterlist.current);\n    //console.log(prodlist.current);\n\n    return endarr;\n  }; //console.log(allprods);\n\n\n  return loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflowY: \"hidden\",\n      width: \"100vw\",\n      height: \"100vh\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(PulseLoader, {\n      color: \"#b5b5b5\",\n      loading: loading,\n      size: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflowY: \"hidden\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TopDiv, {\n      children: /*#__PURE__*/_jsxDEV(Navbar_produkte, {\n        passProd: passProd,\n        allprods_display: allprods_display\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MidDiv1, {\n      children: [/*#__PURE__*/_jsxDEV(SetProducts, {\n        deactProd: deactProd,\n        shopList: shopList,\n        filter: filter,\n        setFilter: newFilter,\n        deleteList: filterDeleteList.current,\n        filterlist: filterlist.current\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Products, {\n        allprods_display: allprods,\n        filter: filter,\n        filterSetts: filterSetts.current,\n        pPage: pageNumber,\n        setpPage: number => {\n          setPageNumber(number);\n          pageRef.current = number;\n        },\n        filterlist: filterlist.current,\n        setLikes: list => {\n          setLikeList();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MidDiv2, {\n      children: /*#__PURE__*/_jsxDEV(MidCards, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FootDiv, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProduktePage, \"Qfv/rf5u6wzDDbEQWjAbDBFJnFo=\");\n\n_c5 = ProduktePage;\nexport default ProduktePage; ////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n\nconst except = (out, prods, lastprods) => {\n  let neuProds = [];\n\n  switch (out) {\n    case 0:\n      neuProds = [lastprods[0], filterMarke(prods), filterMaterial(prods), filterFarbe(prods)];\n      break;\n\n    case 1:\n      neuProds = [filterKategorie(prods), lastprods[1], filterMaterial(prods), filterFarbe(prods)];\n      break;\n\n    case 2:\n      neuProds = [filterKategorie(prods), filterMarke(prods), lastprods[2], filterFarbe(prods)];\n      break;\n\n    case 3:\n      neuProds = [filterKategorie(prods), filterMarke(prods), filterMaterial(prods), lastprods[3]];\n      break;\n  }\n\n  let prod = [...lastprods];\n  let endprods = [...neuProds];\n  let check = false;\n\n  for (let i = 0; i < prod.length; i++) {\n    for (let j = 0; j < prod[i].length; j++) {\n      check = false;\n\n      for (let k = 0; k < neuProds[i].length; k++) {\n        if (prod[i][j][0] == neuProds[i][k][0]) {\n          check = true;\n        }\n      }\n\n      if (check !== true) {\n        let a = [...prod[i][j]];\n        a[1] = [];\n        endprods[i].push(a);\n      }\n    }\n  } //console.log(neuProds);\n  //console.log(endprods);\n\n\n  return endprods;\n}; ////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n\n\nconst filterKategorie = prods => {\n  let filter = [];\n  let uniq = [];\n  let endArr = [];\n  uniq = [\"Armband\", \"Creole\", \"Damenring\", \"Kette\", \"Ohrring\", \"Ohrstecker\", \"Charm\"];\n  endArr = [];\n  uniq.map((item, index) => {\n    prods.map((prct, ind) => {\n      if (prct.product_keywords != null) {\n        let prodKategorie = prct.product_keywords.toLowerCase();\n        let savedKategorie = item.toLowerCase();\n\n        if (prodKategorie.search(savedKategorie) != -1) {\n          endArr.push(prct);\n        }\n      }\n    });\n    filter.push([item, endArr, false]);\n    endArr = [];\n  }); //console.log(filter);\n\n  let end = [[\"Armbänder\", [], false], [\"Ketten\", [], false], [\"Ringe\", [], false], [\"Ohrringe\", [], false], [\"Charms\", [], false]];\n  let newList = [];\n  newList.push(filter[0][1]);\n  end[0][1] = newList.flat();\n  newList = [];\n  newList.push(filter[3][1]);\n  end[1][1] = newList.flat();\n  newList = [];\n  newList.push(filter[2][1]);\n  end[2][1] = newList.flat();\n  newList = [];\n  newList.push(filter[1][1]);\n  newList.push(filter[4][1]);\n  newList.push(filter[5][1]);\n  end[3][1] = newList.flat();\n  newList = [];\n  newList.push(filter[6][1]);\n  end[4][1] = newList.flat();\n  return end;\n}; ////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n\n\nconst filterMarke = prods => {\n  let filter = [];\n  let uniq = [];\n  let endArr = [];\n  let markenArr = [];\n  prods.map((prod, ind) => {\n    if (prod.product_marke != null) {\n      markenArr.push(prod.product_marke.toLowerCase());\n    }\n  });\n  uniq = [...new Set(markenArr)];\n  uniq.map((item, index) => {\n    prods.map((prct, ind) => {\n      if (prct.product_marke != null) {\n        let prodMarke = prct.product_marke.toLowerCase();\n        let savedMarke = item.toLowerCase();\n\n        if (prodMarke.search(savedMarke) != -1) {\n          endArr.push(prct);\n        }\n      }\n    });\n    filter.push([item, endArr, false]);\n    endArr = [];\n  });\n  return filter;\n}; ////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n\n\nconst filterMaterial = prods => {\n  let filter = [];\n  let uniq = [];\n  let endArr = [];\n  let materialArr = [];\n  prods.map((prod, ind) => {\n    if (prod.product_material != null) {\n      materialArr.push(prod.product_material.toLowerCase());\n    }\n  });\n  uniq = [...new Set(materialArr)];\n  uniq.map((item, index) => {\n    prods.map((prct, ind) => {\n      if (prct.product_material != null) {\n        let prodMaterial = prct.product_material.toLowerCase();\n        let savedMaterial = item.toLowerCase();\n\n        if (prodMaterial.search(savedMaterial) != -1) {\n          endArr.push(prct);\n        }\n      }\n    });\n    filter.push([item, endArr, false]);\n    endArr = [];\n  });\n  return filter;\n}; ////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n\n\nconst filterFarbe = prods => {\n  let filter = [];\n  let uniq = [];\n  let endArr = [];\n  let farbenArr = [];\n  prods.map((prod, ind) => {\n    if (prod.product_farbe != null) {\n      farbenArr.push(prod.product_farbe.toLowerCase());\n    }\n  });\n  uniq = [...new Set(farbenArr)];\n  uniq.map((item, index) => {\n    prods.map((prct, ind) => {\n      if (prct.product_farbe != null) {\n        let prodFarbe = prct.product_farbe.toLowerCase();\n        let savedFarbe = item.toLowerCase();\n\n        if (prodFarbe.search(savedFarbe) != -1) {\n          endArr.push(prct);\n        }\n      }\n    });\n    filter.push([item, endArr, false]);\n    endArr = [];\n  });\n  return filter;\n};\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"TopDiv\");\n$RefreshReg$(_c2, \"MidDiv1\");\n$RefreshReg$(_c3, \"MidDiv2\");\n$RefreshReg$(_c4, \"FootDiv\");\n$RefreshReg$(_c5, \"ProduktePage\");","map":{"version":3,"sources":["C:/Users/Abtin/Desktop/HTML/dia/client/src/components/pages/ProduktePage.js"],"names":["styled","Navbar_produkte","SetProducts","Products","MidCards","useRef","useState","useEffect","PulseLoader","TopDiv","div","MidDiv1","MidDiv2","FootDiv","ProduktePage","allprods_display","deactProd","shopList","passProd","likeList","setLikeList","allprods","setAllProds","pageRef","pageNumber","setPageNumber","current","filterDeleteList","filter","setFilter","filterKategorie","flat","filterMarke","filterMaterial","filterFarbe","filterSetts","filterlist","prodlist","loading","setLoader","likelist","JSON","parse","localStorage","getItem","newlikeList","map","prod","index","push","setTimeout","fil","newFilter","n","m","setter","prods","length","newFilt","addFilter","item","size","newProds","i","slice","deleteFilter","window","alert","filtersetts","length1","length2","allprds","concat","except","j","endarr","ind","splice","currentProd","a","b","overflowY","width","height","display","justifyContent","alignItems","number","list","out","lastprods","neuProds","endprods","check","k","uniq","endArr","prct","product_keywords","prodKategorie","toLowerCase","savedKategorie","search","end","newList","markenArr","product_marke","Set","prodMarke","savedMarke","materialArr","product_material","prodMaterial","savedMaterial","farbenArr","product_farbe","prodFarbe","savedFarbe"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\r\nimport Navbar_produkte from \"../single_comps/produktePageComps/Navbar_produkte\";\r\n\r\nimport SetProducts from \"../single_comps/produktePageComps/SetProducts\";\r\nimport Products from \"../single_comps/produktePageComps/Products\";\r\nimport MidCards from \"../single_comps/produktePageComps/MidCards\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\n\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nconst TopDiv = styled.div`\r\n  width: 100%;\r\n  height: 800px;\r\n  overflow: hidden;\r\n`;\r\nconst MidDiv1 = styled.div`\r\n  width: 100%;\r\n  margin-top: 10px;\r\n`;\r\nconst MidDiv2 = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  height: 800px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 550px;\r\n\r\n  border: 1px solid black;\r\n`;\r\nconst FootDiv = styled.div`\r\n  margin-top: 140px;\r\n  width: 100%;\r\n  height: 300px;\r\n`;\r\nfunction ProduktePage({ allprods_display, deactProd, shopList, passProd }) {\r\n  const [likeList, setLikeList] = useState();\r\n  const [allprods, setAllProds] = useState(allprods_display);\r\n  const pageRef = useRef(0);\r\n  const [pageNumber, setPageNumber] = useState(pageRef.current);\r\n  const filterDeleteList = useRef();\r\n  const [filter, setFilter] = useState([\r\n    filterKategorie(allprods.flat()),\r\n    filterMarke(allprods.flat()),\r\n    filterMaterial(allprods.flat()),\r\n    filterFarbe(allprods.flat()),\r\n  ]);\r\n  const filterSetts = useRef([]);\r\n  const filterlist = useRef([[filter, 999, \"X\"]]);\r\n  const prodlist = useRef([allprods.flat()]);\r\n  ////////////////////////////////////////////////////////////////////////\r\n  const [loading, setLoader] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let likelist = JSON.parse(localStorage.getItem(\"likes\"));\r\n    let newlikeList = [];\r\n    if (likelist != null) {\r\n      likelist.map((prod, index) => {\r\n        newlikeList.push(prod[2]);\r\n      });\r\n    }\r\n    setLikeList([...newlikeList]);\r\n    setLoader(true);\r\n    setTimeout(() => {\r\n      setLoader(false);\r\n    }, 1500);\r\n  }, []);\r\n  ////////////////////////////////////////////////////////////////\r\n  useEffect(() => {\r\n    filterDeleteList.current = [];\r\n    setFilter([\r\n      filterKategorie(allprods_display.flat()),\r\n      filterMarke(allprods_display.flat()),\r\n      filterMaterial(allprods_display.flat()),\r\n      filterFarbe(allprods_display.flat()),\r\n    ]);\r\n    let fil = [\r\n      filterKategorie(allprods_display.flat()),\r\n      filterMarke(allprods_display.flat()),\r\n      filterMaterial(allprods_display.flat()),\r\n      filterFarbe(allprods_display.flat()),\r\n    ];\r\n    filterlist.current = [[fil, 999, \"X\"]];\r\n    prodlist.current = [allprods.flat()];\r\n    setAllProds([...allprods_display]);\r\n    setPageNumber(0);\r\n  }, [allprods_display]);\r\n  ////////////////////////////////////////////////////////////////\r\n  const newFilter = (filter, n, m, setter, prods) => {\r\n    filterSetts.current = [n, m, setter, prods];\r\n    setPageNumber(0);\r\n    if (prods.length > 0) {\r\n      if (filterSetts.current[2]) {\r\n        let newFilt = addFilter(filterSetts.current);\r\n        filterDeleteList.current = [];\r\n        newFilt[0][0].map((item, index) => {\r\n          if (index > 0) {\r\n            filterDeleteList.current.push(item);\r\n          }\r\n        });\r\n        let size = 55;\r\n        let newProds = [];\r\n        for (\r\n          var i = 0;\r\n          i < newFilt[1][0][newFilt[1][1] - 1].length;\r\n          i += size\r\n        ) {\r\n          newProds.push(newFilt[1][0][newFilt[1][1] - 1].slice(i, i + size));\r\n        }\r\n        setAllProds([...newProds]);\r\n        setFilter([...newFilt[0][0][newFilt[0][1] - 1][0]]);\r\n      } else {\r\n        let newFilt = deleteFilter(filterSetts.current);\r\n        filterDeleteList.current = [];\r\n        newFilt[0][0].map((item, index) => {\r\n          if (index > 0) {\r\n            filterDeleteList.current.push(item);\r\n          }\r\n        });\r\n\r\n        let size = 55;\r\n        let newProds = [];\r\n        for (\r\n          var i = 0;\r\n          i < newFilt[1][0][newFilt[1][1] - 1].length;\r\n          i += size\r\n        ) {\r\n          newProds.push(newFilt[1][0][newFilt[1][1] - 1].slice(i, i + size));\r\n        }\r\n        setAllProds([...newProds]);\r\n        setFilter([...newFilt[0][0][newFilt[0][1] - 1][0]]);\r\n        //console.log(filterDeleteList.current);\r\n        //console.log(newFilt[0][0]);\r\n      }\r\n    } else {\r\n      window.alert(\"no products\");\r\n    }\r\n  };\r\n  const addFilter = (filtersetts) => {\r\n    let length1 = filterlist.current.length;\r\n    let length2 = prodlist.current.length;\r\n    let allprds = [];\r\n    if (filtersetts[0] == filterlist.current[length1 - 1][1]) {\r\n      allprds = filtersetts[3].concat(prodlist.current[length2 - 1]);\r\n    } else {\r\n      allprds = filtersetts[3];\r\n    }\r\n    prodlist.current.push(allprds);\r\n\r\n    filterlist.current.push([\r\n      except(\r\n        filtersetts[0],\r\n        prodlist.current[length2],\r\n        filterlist.current[length1 - 1][0]\r\n      ),\r\n      filtersetts[0],\r\n      filtersetts[1],\r\n    ]);\r\n    if (filterlist.current.length > 1) {\r\n      for (let i = 1; i < filterlist.current.length; i++) {\r\n        for (\r\n          let j = 0;\r\n          j < filterlist.current[i][0][filterlist.current[i][1]].length;\r\n          j++\r\n        ) {\r\n          if (\r\n            filterlist.current[i][2] ==\r\n            filterlist.current[i][0][filterlist.current[i][1]][j][0]\r\n          ) {\r\n            filterlist.current[length1][0][filterlist.current[i][1]][\r\n              j\r\n            ][2] = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    //console.log(filterlist.current);\r\n    // console.log(prodlist.current);\r\n    let endarr = [\r\n      [filterlist.current, filterlist.current.length],\r\n      [prodlist.current, prodlist.current.length],\r\n    ];\r\n    return endarr;\r\n  };\r\n  const deleteFilter = (filtersetts) => {\r\n    let length1 = filterlist.current.length;\r\n    let length2 = prodlist.current.length;\r\n    let allprds = [];\r\n    let ind;\r\n    for (let i = 0; i < length1; i++) {\r\n      if (filterlist.current[i][2] == filtersetts[1]) {\r\n        ind = i;\r\n      }\r\n    }\r\n    filterlist.current.splice(ind, 1);\r\n    prodlist.current.splice(ind, 1);\r\n\r\n    for (let i = 1; i < filterlist.current.length; i++) {\r\n      allprds = [];\r\n      let currentProd = [filterlist.current[i][1], filterlist.current[i][2]];\r\n      for (\r\n        let j = 0;\r\n        j < filterlist.current[i - 1][0][currentProd[0]].length;\r\n        j++\r\n      ) {\r\n        if (\r\n          filterlist.current[i - 1][0][currentProd[0]][j][0] == currentProd[1]\r\n        ) {\r\n          if (currentProd[0] == filterlist.current[i - 1][1]) {\r\n            allprds = prodlist.current[i - 1].concat(\r\n              filterlist.current[i - 1][0][currentProd[0]][j][1]\r\n            );\r\n          } else {\r\n            allprds = filterlist.current[i - 1][0][currentProd[0]][j][1];\r\n          }\r\n        }\r\n      }\r\n      prodlist.current[i] = allprds;\r\n      filterlist.current[i][0] = except(\r\n        filterlist.current[i][1],\r\n        prodlist.current[i],\r\n        filterlist.current[i - 1][0]\r\n      );\r\n    }\r\n\r\n    if (filterlist.current.length > 1) {\r\n      for (let a = 1; a < filterlist.current.length; a++) {\r\n        for (\r\n          let b = 0;\r\n          b < filterlist.current[a][0][filterlist.current[a][1]].length;\r\n          b++\r\n        ) {\r\n          if (\r\n            filterlist.current[a][2] ==\r\n            filterlist.current[a][0][filterlist.current[a][1]][b][0]\r\n          ) {\r\n            filterlist.current[filterlist.current.length - 1][0][\r\n              filterlist.current[a][1]\r\n            ][b][2] = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    let endarr = [\r\n      [filterlist.current, filterlist.current.length],\r\n      [prodlist.current, prodlist.current.length],\r\n    ];\r\n    //console.log(filterlist.current);\r\n    //console.log(prodlist.current);\r\n    return endarr;\r\n  };\r\n  //console.log(allprods);\r\n  return loading ? (\r\n    <div\r\n      style={{\r\n        overflowY: \"hidden\",\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <PulseLoader color={\"#b5b5b5\"} loading={loading} size={50} />\r\n    </div>\r\n  ) : (\r\n    <div style={{ overflowY: \"hidden\" }}>\r\n      <TopDiv>\r\n        <Navbar_produkte\r\n          passProd={passProd}\r\n          allprods_display={allprods_display}\r\n        />\r\n      </TopDiv>\r\n      <MidDiv1>\r\n        <SetProducts\r\n          deactProd={deactProd}\r\n          shopList={shopList}\r\n          filter={filter}\r\n          setFilter={newFilter}\r\n          deleteList={filterDeleteList.current}\r\n          filterlist={filterlist.current}\r\n        />\r\n        <Products\r\n          allprods_display={allprods}\r\n          filter={filter}\r\n          filterSetts={filterSetts.current}\r\n          pPage={pageNumber}\r\n          setpPage={(number) => {\r\n            setPageNumber(number);\r\n            pageRef.current = number;\r\n          }}\r\n            filterlist={filterlist.current}\r\n            setLikes={(list) => {setLikeList()}}\r\n        />\r\n      </MidDiv1>\r\n      <MidDiv2>\r\n        <MidCards />\r\n      </MidDiv2>\r\n      <FootDiv></FootDiv>\r\n    </div>\r\n  );\r\n}\r\nexport default ProduktePage;\r\n////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\nconst except = (out, prods, lastprods) => {\r\n  let neuProds = [];\r\n  switch (out) {\r\n    case 0:\r\n      neuProds = [\r\n        lastprods[0],\r\n        filterMarke(prods),\r\n        filterMaterial(prods),\r\n        filterFarbe(prods),\r\n      ];\r\n      break;\r\n    case 1:\r\n      neuProds = [\r\n        filterKategorie(prods),\r\n        lastprods[1],\r\n        filterMaterial(prods),\r\n        filterFarbe(prods),\r\n      ];\r\n      break;\r\n    case 2:\r\n      neuProds = [\r\n        filterKategorie(prods),\r\n        filterMarke(prods),\r\n        lastprods[2],\r\n        filterFarbe(prods),\r\n      ];\r\n      break;\r\n    case 3:\r\n      neuProds = [\r\n        filterKategorie(prods),\r\n        filterMarke(prods),\r\n        filterMaterial(prods),\r\n        lastprods[3],\r\n      ];\r\n      break;\r\n  }\r\n  let prod = [...lastprods];\r\n  let endprods = [...neuProds];\r\n  let check = false;\r\n  for (let i = 0; i < prod.length; i++) {\r\n    for (let j = 0; j < prod[i].length; j++) {\r\n      check = false;\r\n      for (let k = 0; k < neuProds[i].length; k++) {\r\n        if (prod[i][j][0] == neuProds[i][k][0]) {\r\n          check = true;\r\n        }\r\n      }\r\n      if (check !== true) {\r\n        let a = [...prod[i][j]];\r\n        a[1] = [];\r\n        endprods[i].push(a);\r\n      }\r\n    }\r\n  }\r\n  //console.log(neuProds);\r\n  //console.log(endprods);\r\n  return endprods;\r\n};\r\n\r\n////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\nconst filterKategorie = (prods) => {\r\n  let filter = [];\r\n  let uniq = [];\r\n  let endArr = [];\r\n  uniq = [\r\n    \"Armband\",\r\n    \"Creole\",\r\n    \"Damenring\",\r\n    \"Kette\",\r\n    \"Ohrring\",\r\n    \"Ohrstecker\",\r\n    \"Charm\",\r\n  ];\r\n  endArr = [];\r\n  uniq.map((item, index) => {\r\n    prods.map((prct, ind) => {\r\n      if (prct.product_keywords != null) {\r\n        let prodKategorie = prct.product_keywords.toLowerCase();\r\n        let savedKategorie = item.toLowerCase();\r\n        if (prodKategorie.search(savedKategorie) != -1) {\r\n          endArr.push(prct);\r\n        }\r\n      }\r\n    });\r\n    filter.push([item, endArr, false]);\r\n    endArr = [];\r\n  });\r\n  //console.log(filter);\r\n  let end = [\r\n    [\"Armbänder\", [], false],\r\n    [\"Ketten\", [], false],\r\n    [\"Ringe\", [], false],\r\n    [\"Ohrringe\", [], false],\r\n    [\"Charms\", [], false],\r\n  ];\r\n  let newList = [];\r\n  newList.push(filter[0][1]);\r\n  end[0][1] = newList.flat();\r\n  newList = [];\r\n  newList.push(filter[3][1]);\r\n  end[1][1] = newList.flat();\r\n  newList = [];\r\n  newList.push(filter[2][1]);\r\n  end[2][1] = newList.flat();\r\n  newList = [];\r\n  newList.push(filter[1][1]);\r\n  newList.push(filter[4][1]);\r\n  newList.push(filter[5][1]);\r\n  end[3][1] = newList.flat();\r\n  newList = [];\r\n  newList.push(filter[6][1]);\r\n  end[4][1] = newList.flat();\r\n  return end;\r\n};\r\n////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n\r\nconst filterMarke = (prods) => {\r\n  let filter = [];\r\n  let uniq = [];\r\n  let endArr = [];\r\n  let markenArr = [];\r\n  prods.map((prod, ind) => {\r\n    if (prod.product_marke != null) {\r\n      markenArr.push(prod.product_marke.toLowerCase());\r\n    }\r\n  });\r\n  uniq = [...new Set(markenArr)];\r\n\r\n  uniq.map((item, index) => {\r\n    prods.map((prct, ind) => {\r\n      if (prct.product_marke != null) {\r\n        let prodMarke = prct.product_marke.toLowerCase();\r\n        let savedMarke = item.toLowerCase();\r\n        if (prodMarke.search(savedMarke) != -1) {\r\n          endArr.push(prct);\r\n        }\r\n      }\r\n    });\r\n    filter.push([item, endArr, false]);\r\n    endArr = [];\r\n  });\r\n  return filter;\r\n};\r\n////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\nconst filterMaterial = (prods) => {\r\n  let filter = [];\r\n  let uniq = [];\r\n  let endArr = [];\r\n  let materialArr = [];\r\n  prods.map((prod, ind) => {\r\n    if (prod.product_material != null) {\r\n      materialArr.push(prod.product_material.toLowerCase());\r\n    }\r\n  });\r\n  uniq = [...new Set(materialArr)];\r\n\r\n  uniq.map((item, index) => {\r\n    prods.map((prct, ind) => {\r\n      if (prct.product_material != null) {\r\n        let prodMaterial = prct.product_material.toLowerCase();\r\n        let savedMaterial = item.toLowerCase();\r\n        if (prodMaterial.search(savedMaterial) != -1) {\r\n          endArr.push(prct);\r\n        }\r\n      }\r\n    });\r\n    filter.push([item, endArr, false]);\r\n    endArr = [];\r\n  });\r\n  return filter;\r\n};\r\n////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\nconst filterFarbe = (prods) => {\r\n  let filter = [];\r\n  let uniq = [];\r\n  let endArr = [];\r\n  let farbenArr = [];\r\n  prods.map((prod, ind) => {\r\n    if (prod.product_farbe != null) {\r\n      farbenArr.push(prod.product_farbe.toLowerCase());\r\n    }\r\n  });\r\n  uniq = [...new Set(farbenArr)];\r\n\r\n  uniq.map((item, index) => {\r\n    prods.map((prct, ind) => {\r\n      if (prct.product_farbe != null) {\r\n        let prodFarbe = prct.product_farbe.toLowerCase();\r\n        let savedFarbe = item.toLowerCase();\r\n        if (prodFarbe.search(savedFarbe) != -1) {\r\n          endArr.push(prct);\r\n        }\r\n      }\r\n    });\r\n    filter.push([item, endArr, false]);\r\n    endArr = [];\r\n  });\r\n  return filter;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}