{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport Navbar_produkte from \"../single_comps/produktePageComps/Navbar_produkte\";\nimport SearchBar from \"../single_comps/produktePageComps/SearchBar\";\nimport SetProducts from \"../single_comps/produktePageComps/SetProducts\";\nimport Products from \"../single_comps/produktePageComps/Products\";\nimport MidCards from \"../single_comps/produktePageComps/MidCards\";\nimport { useRef, useState } from \"react\";\nconst TopDiv = styled.div`\n  width: 100%;\n  height: 800px;\n  overflow: hidden;\n`;\nconst MidDiv1 = styled.div`\n  width: 100%;\n  margin-top: 10px;\n`;\nconst MidDiv2 = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 1600px;\n  height: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 550px;\n\n  border: 1px solid black;\n`;\nconst FootDiv = styled.div`\n  margin-top: 140px;\n  width: 100%;\n  height: 300px;\n`;\n\nfunction ProduktePage(_ref) {\n  _s();\n\n  let {\n    allprods_display,\n    deactProd\n  } = _ref;\n  const [filter, setFilter] = useState(getFilter(allprods_display));\n\n  const filterSetter = setter => {\n    // console.log(setter)\n    setFilter([...setter]);\n  };\n\n  let counter = 0;\n  filter.map((obj, index) => {\n    if (obj[\"all\"].length > 0) {\n      counter++;\n    }\n  });\n  var filterProds = [];\n\n  if (counter > 1) {\n    filter.map((obj, index) => {\n      if (obj[\"all\"].length > 0) {\n        filterProds.push(obj[\"all\"]);\n      }\n    });\n    filterProds = filterProds.flat(); //console.log(filterProds);\n  }\n  /*const toFindDuplicates = (arry) =>\r\n    arry.filter((item, index) => arry.indexOf(item) !== index);\r\n  const duplicateElementa = toFindDuplicates(filterProds);\r\n  console.log(duplicateElementa);\r\n  //console.log(counter)\r\n  var allprods = allprods_display;\r\n  const [searchChar, setSearchTextChar] = useState(\"\");\r\n  const searcher = useRef(false);\r\n  var new_prods = useRef([]);\r\n  var past_prods = allprods_display;\r\n  past_prods = past_prods.flat();\r\n    function searchText(text) {\r\n    setSearchTextChar(text);\r\n    if (text) {\r\n      searcher.current = true;\r\n    } else {\r\n      searcher.current = false;\r\n      allprods = allprods_display;\r\n    }\r\n  }\r\n  if (searcher.current) {\r\n    var prods = [];\r\n    new_prods.current = [];\r\n    for (var i = 0; i < past_prods.length; i++) {\r\n      var obj_text = past_prods[i].product_keywords.toString();\r\n      obj_text = obj_text.toLowerCase();\r\n      var text_ = searchChar.toString();\r\n      text_ = text_.toLowerCase();\r\n      if (obj_text.search(text_) != -1) {\r\n        new_prods.current.push(past_prods[i]);\r\n      }\r\n    }\r\n      var size = 25;\r\n    for (var i = 0; i < new_prods.current.length; i += size) {\r\n      prods.push(new_prods.current.slice(i, i + size));\r\n    }\r\n    if (prods.length > 0) {\r\n      allprods = prods;\r\n    } else {\r\n      allprods = allprods_display;\r\n      console.log(\"error nothing found\");\r\n    }\r\n  }\r\n  console.log(filter);\r\n    return (\r\n    <div style={{ overflowY: \"hidden\" }}>\r\n      <TopDiv>\r\n        <Navbar_produkte />\r\n      </TopDiv>\r\n      <MidDiv1>\r\n        <SearchBar searchOn={searchText} />\r\n        <SetProducts\r\n          deactProd={deactProd}\r\n          filter={filter}\r\n          filterSet={filterSetter}\r\n        />\r\n        <Products allprods_display={allprods} filter={filter} />\r\n      </MidDiv1>\r\n      <MidDiv2>\r\n        <MidCards />\r\n      </MidDiv2>\r\n      s<FootDiv></FootDiv>\r\n    </div>\r\n  );\r\n  }\r\n  export default ProduktePage;\r\n  const getFilter = (allprods_display) => {\r\n  var arr = allprods_display;\r\n  arr = arr.flat();\r\n  var filterArr = [\r\n    { filter: \"kategorie\", all: [] },\r\n    { filter: \"marke\", all: [] },\r\n    { filter: \"material\", all: [] },\r\n    { filter: \"farbe\", all: [] },\r\n  ];\r\n  var endArr = [];\r\n  var uniq = [];\r\n    //////////////////////////\r\n  //var markenArr = [];\r\n  uniq = [\"Ohrring\", \"Ohrstecker\", \"Kette\", \"Ring\", \"Armband\"];\r\n    uniq.map((item, index) => {\r\n    arr.map((prct, ind) => {\r\n      if (prct.product_keywords != null) {\r\n        let prodKategorie = prct.product_keywords.toLowerCase();\r\n        let savedKategorie = item.toLowerCase();\r\n        if (prodKategorie.search(savedKategorie) != -1) {\r\n          endArr.push(prct);\r\n        }\r\n      }\r\n    });\r\n    filterArr[0][item] = [false, endArr];\r\n    endArr = [];\r\n  });\r\n  //////////////////////////\r\n  var markenArr = [];\r\n  arr.map((prod, ind) => {\r\n    if (prod.product_marke != null) {\r\n      markenArr.push(prod.product_marke.toLowerCase());\r\n    }\r\n  });\r\n  uniq = [...new Set(markenArr)];\r\n    uniq.map((item, index) => {\r\n    arr.map((prct, ind) => {\r\n      if (prct.product_marke != null) {\r\n        let prodMarke = prct.product_marke.toLowerCase();\r\n        let savedMarke = item.toLowerCase();\r\n        if (prodMarke.search(savedMarke) != -1) {\r\n          endArr.push(prct);\r\n        }\r\n      }\r\n    });\r\n    filterArr[1][item] = [false, endArr];\r\n    endArr = [];\r\n  });\r\n  //////////////////////////\r\n  var materialArr = [];\r\n  arr.map((prod, ind) => {\r\n    if (prod.product_material != null) {\r\n      materialArr.push(\r\n        prod.product_material\r\n          .split(\",\")[0]\r\n          .split(\";\")[0]\r\n          .replace(\"-\", \" \")\r\n          .toLowerCase()\r\n      );\r\n    }\r\n  });\r\n  uniq = [...new Set(materialArr)];\r\n    uniq.map((item, index) => {\r\n    arr.map((prct, ind) => {\r\n      if (prct.product_material != null) {\r\n        let prodMaterial = prct.product_material.toLowerCase();\r\n        let savedMaterial = item.toLowerCase();\r\n        if (prodMaterial.search(savedMaterial) != -1) {\r\n          endArr.push(prct);\r\n        }\r\n      }\r\n    });\r\n    filterArr[2][item] = [false, endArr];\r\n    endArr = [];\r\n  });\r\n  //////////////////////////\r\n  var farbenArr = [];\r\n  arr.map((prod, ind) => {\r\n    if (prod.product_farbe != null) {\r\n      farbenArr.push(prod.product_farbe.toLowerCase());\r\n    }\r\n  });\r\n  uniq = [...new Set(farbenArr)];\r\n    uniq.map((item, index) => {\r\n    arr.map((prct, ind) => {\r\n      if (prct.product_farbe != null) {\r\n        let prodFarbe = prct.product_farbe.toLowerCase();\r\n        let savedFarbe = item.toLowerCase();\r\n        if (prodFarbe.search(savedFarbe) != -1) {\r\n          endArr.push(prct);\r\n        }\r\n      }\r\n    });\r\n    filterArr[3][item] = [false, endArr];\r\n    endArr = [];\r\n  });\r\n    return filterArr;\r\n  /*var testarr = [\r\n    [\"pandora\", false, []],\r\n    [\"swar\", false, []],\r\n    [\"dora\", false, []],\r\n  ];\r\n  var testObj = { filter: \"mark\", all: [] };\r\n  testarr.map((item, index) => {\r\n    testObj[item[0]] = [item[1], item[2]];\r\n  });\r\n  console.log(testObj);*/\n\n}\n\n_s(ProduktePage, \"+oiGuRu87tmSlgrTg04A40ezJPo=\");\n\n_c = ProduktePage;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProduktePage\");","map":{"version":3,"sources":["C:/Users/fr3ak/Desktop/Coding/dia/client/src/components/pages/ProduktePage.js"],"names":["styled","Navbar_produkte","SearchBar","SetProducts","Products","MidCards","useRef","useState","TopDiv","div","MidDiv1","MidDiv2","FootDiv","ProduktePage","allprods_display","deactProd","filter","setFilter","getFilter","filterSetter","setter","counter","map","obj","index","length","filterProds","push","flat"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,eAAP,MAA4B,mDAA5B;AACA,OAAOC,SAAP,MAAsB,6CAAtB;AACA,OAAOC,WAAP,MAAwB,+CAAxB;AACA,OAAOC,QAAP,MAAqB,4CAArB;AACA,OAAOC,QAAP,MAAqB,4CAArB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AAEA,MAAMC,MAAM,GAAGR,MAAM,CAACS,GAAI;AAC1B;AACA;AACA;AACA,CAJA;AAKA,MAAMC,OAAO,GAAGV,MAAM,CAACS,GAAI;AAC3B;AACA;AACA,CAHA;AAIA,MAAME,OAAO,GAAGX,MAAM,CAACS,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAYA,MAAMG,OAAO,GAAGZ,MAAM,CAACS,GAAI;AAC3B;AACA;AACA;AACA,CAJA;;AAKA,SAASI,YAAT,OAAuD;AAAA;;AAAA,MAAjC;AAAEC,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,GAAiC;AACrD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAACW,SAAS,CAACJ,gBAAD,CAAV,CAApC;;AACA,QAAMK,YAAY,GAAIC,MAAD,IAAY;AAC/B;AAEAH,IAAAA,SAAS,CAAC,CAAC,GAAGG,MAAJ,CAAD,CAAT;AACD,GAJD;;AAKA,MAAIC,OAAO,GAAG,CAAd;AACAL,EAAAA,MAAM,CAACM,GAAP,CAAW,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACzB,QAAID,GAAG,CAAC,KAAD,CAAH,CAAWE,MAAX,GAAoB,CAAxB,EAA2B;AACzBJ,MAAAA,OAAO;AACR;AACF,GAJD;AAKA,MAAIK,WAAW,GAAG,EAAlB;;AACA,MAAIL,OAAO,GAAG,CAAd,EAAiB;AACfL,IAAAA,MAAM,CAACM,GAAP,CAAW,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACzB,UAAID,GAAG,CAAC,KAAD,CAAH,CAAWE,MAAX,GAAoB,CAAxB,EAA2B;AACzBC,QAAAA,WAAW,CAACC,IAAZ,CAAiBJ,GAAG,CAAC,KAAD,CAApB;AACD;AACF,KAJD;AAKAG,IAAAA,WAAW,GAAGA,WAAW,CAACE,IAAZ,EAAd,CANe,CAOff,Y;;KAAAA,Y;AA+MR","sourcesContent":["import styled from \"styled-components\";\r\nimport Navbar_produkte from \"../single_comps/produktePageComps/Navbar_produkte\";\r\nimport SearchBar from \"../single_comps/produktePageComps/SearchBar\";\r\nimport SetProducts from \"../single_comps/produktePageComps/SetProducts\";\r\nimport Products from \"../single_comps/produktePageComps/Products\";\r\nimport MidCards from \"../single_comps/produktePageComps/MidCards\";\r\nimport { useRef, useState } from \"react\";\r\n\r\nconst TopDiv = styled.div`\r\n  width: 100%;\r\n  height: 800px;\r\n  overflow: hidden;\r\n`;\r\nconst MidDiv1 = styled.div`\r\n  width: 100%;\r\n  margin-top: 10px;\r\n`;\r\nconst MidDiv2 = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  width: 1600px;\r\n  height: 800px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 550px;\r\n\r\n  border: 1px solid black;\r\n`;\r\nconst FootDiv = styled.div`\r\n  margin-top: 140px;\r\n  width: 100%;\r\n  height: 300px;\r\n`;\r\nfunction ProduktePage({ allprods_display, deactProd }) {\r\n  const [filter, setFilter] = useState(getFilter(allprods_display));\r\n  const filterSetter = (setter) => {\r\n    // console.log(setter)\r\n\r\n    setFilter([...setter]);\r\n  };\r\n  let counter = 0;\r\n  filter.map((obj, index) => {\r\n    if (obj[\"all\"].length > 0) {\r\n      counter++;\r\n    }\r\n  });\r\n  var filterProds = [];\r\n  if (counter > 1) {\r\n    filter.map((obj, index) => {\r\n      if (obj[\"all\"].length > 0) {\r\n        filterProds.push(obj[\"all\"]);\r\n      }\r\n    });\r\n    filterProds = filterProds.flat();\r\n    //console.log(filterProds);\r\n  }\r\n  /*const toFindDuplicates = (arry) =>\r\n    arry.filter((item, index) => arry.indexOf(item) !== index);\r\n  const duplicateElementa = toFindDuplicates(filterProds);\r\n  console.log(duplicateElementa);\r\n  //console.log(counter)\r\n  var allprods = allprods_display;\r\n  const [searchChar, setSearchTextChar] = useState(\"\");\r\n  const searcher = useRef(false);\r\n  var new_prods = useRef([]);\r\n  var past_prods = allprods_display;\r\n  past_prods = past_prods.flat();\r\n\r\n  function searchText(text) {\r\n    setSearchTextChar(text);\r\n    if (text) {\r\n      searcher.current = true;\r\n    } else {\r\n      searcher.current = false;\r\n      allprods = allprods_display;\r\n    }\r\n  }\r\n  if (searcher.current) {\r\n    var prods = [];\r\n    new_prods.current = [];\r\n    for (var i = 0; i < past_prods.length; i++) {\r\n      var obj_text = past_prods[i].product_keywords.toString();\r\n      obj_text = obj_text.toLowerCase();\r\n      var text_ = searchChar.toString();\r\n      text_ = text_.toLowerCase();\r\n      if (obj_text.search(text_) != -1) {\r\n        new_prods.current.push(past_prods[i]);\r\n      }\r\n    }\r\n\r\n    var size = 25;\r\n    for (var i = 0; i < new_prods.current.length; i += size) {\r\n      prods.push(new_prods.current.slice(i, i + size));\r\n    }\r\n    if (prods.length > 0) {\r\n      allprods = prods;\r\n    } else {\r\n      allprods = allprods_display;\r\n      console.log(\"error nothing found\");\r\n    }\r\n  }\r\n  console.log(filter);\r\n\r\n  return (\r\n    <div style={{ overflowY: \"hidden\" }}>\r\n      <TopDiv>\r\n        <Navbar_produkte />\r\n      </TopDiv>\r\n      <MidDiv1>\r\n        <SearchBar searchOn={searchText} />\r\n        <SetProducts\r\n          deactProd={deactProd}\r\n          filter={filter}\r\n          filterSet={filterSetter}\r\n        />\r\n        <Products allprods_display={allprods} filter={filter} />\r\n      </MidDiv1>\r\n      <MidDiv2>\r\n        <MidCards />\r\n      </MidDiv2>\r\n      s<FootDiv></FootDiv>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProduktePage;\r\n\r\nconst getFilter = (allprods_display) => {\r\n  var arr = allprods_display;\r\n  arr = arr.flat();\r\n  var filterArr = [\r\n    { filter: \"kategorie\", all: [] },\r\n    { filter: \"marke\", all: [] },\r\n    { filter: \"material\", all: [] },\r\n    { filter: \"farbe\", all: [] },\r\n  ];\r\n  var endArr = [];\r\n  var uniq = [];\r\n\r\n  //////////////////////////\r\n  //var markenArr = [];\r\n  uniq = [\"Ohrring\", \"Ohrstecker\", \"Kette\", \"Ring\", \"Armband\"];\r\n\r\n  uniq.map((item, index) => {\r\n    arr.map((prct, ind) => {\r\n      if (prct.product_keywords != null) {\r\n        let prodKategorie = prct.product_keywords.toLowerCase();\r\n        let savedKategorie = item.toLowerCase();\r\n        if (prodKategorie.search(savedKategorie) != -1) {\r\n          endArr.push(prct);\r\n        }\r\n      }\r\n    });\r\n    filterArr[0][item] = [false, endArr];\r\n    endArr = [];\r\n  });\r\n  //////////////////////////\r\n  var markenArr = [];\r\n  arr.map((prod, ind) => {\r\n    if (prod.product_marke != null) {\r\n      markenArr.push(prod.product_marke.toLowerCase());\r\n    }\r\n  });\r\n  uniq = [...new Set(markenArr)];\r\n\r\n  uniq.map((item, index) => {\r\n    arr.map((prct, ind) => {\r\n      if (prct.product_marke != null) {\r\n        let prodMarke = prct.product_marke.toLowerCase();\r\n        let savedMarke = item.toLowerCase();\r\n        if (prodMarke.search(savedMarke) != -1) {\r\n          endArr.push(prct);\r\n        }\r\n      }\r\n    });\r\n    filterArr[1][item] = [false, endArr];\r\n    endArr = [];\r\n  });\r\n  //////////////////////////\r\n  var materialArr = [];\r\n  arr.map((prod, ind) => {\r\n    if (prod.product_material != null) {\r\n      materialArr.push(\r\n        prod.product_material\r\n          .split(\",\")[0]\r\n          .split(\";\")[0]\r\n          .replace(\"-\", \" \")\r\n          .toLowerCase()\r\n      );\r\n    }\r\n  });\r\n  uniq = [...new Set(materialArr)];\r\n\r\n  uniq.map((item, index) => {\r\n    arr.map((prct, ind) => {\r\n      if (prct.product_material != null) {\r\n        let prodMaterial = prct.product_material.toLowerCase();\r\n        let savedMaterial = item.toLowerCase();\r\n        if (prodMaterial.search(savedMaterial) != -1) {\r\n          endArr.push(prct);\r\n        }\r\n      }\r\n    });\r\n    filterArr[2][item] = [false, endArr];\r\n    endArr = [];\r\n  });\r\n  //////////////////////////\r\n  var farbenArr = [];\r\n  arr.map((prod, ind) => {\r\n    if (prod.product_farbe != null) {\r\n      farbenArr.push(prod.product_farbe.toLowerCase());\r\n    }\r\n  });\r\n  uniq = [...new Set(farbenArr)];\r\n\r\n  uniq.map((item, index) => {\r\n    arr.map((prct, ind) => {\r\n      if (prct.product_farbe != null) {\r\n        let prodFarbe = prct.product_farbe.toLowerCase();\r\n        let savedFarbe = item.toLowerCase();\r\n        if (prodFarbe.search(savedFarbe) != -1) {\r\n          endArr.push(prct);\r\n        }\r\n      }\r\n    });\r\n    filterArr[3][item] = [false, endArr];\r\n    endArr = [];\r\n  });\r\n\r\n  return filterArr;\r\n  /*var testarr = [\r\n    [\"pandora\", false, []],\r\n    [\"swar\", false, []],\r\n    [\"dora\", false, []],\r\n  ];\r\n  var testObj = { filter: \"mark\", all: [] };\r\n  testarr.map((item, index) => {\r\n    testObj[item[0]] = [item[1], item[2]];\r\n  });\r\n  console.log(testObj);*/\r\n};\r\n"]},"metadata":{},"sourceType":"module"}